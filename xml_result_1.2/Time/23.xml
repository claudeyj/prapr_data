<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>MethodNameMutator_0</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.TimeZone.getID()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>312</lineNumber><mutator>MethodNameMutator_0</mutator><index>31</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.DateTimeZone.getConvertedId(Ljava/lang/String;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>MethodNameMutator_0</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.DateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>MethodNameMutator_1</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.TestDateTimeZone$MockDateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>MethodNameMutator_2</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.MockZone using (JII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>MethodNameMutator_4</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.TimeZone.getID()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>312</lineNumber><mutator>MethodNameMutator_4</mutator><index>31</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.DateTimeZone.getConvertedId(Ljava/lang/String;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>39</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.joda.time.DateTimeZone.cProvider is replaced by the call to org.joda.time.DateTimeZone::getProvider()Lorg/joda/time/tz/Provider;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>39</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.joda.time.DateTimeZone.cProvider is replaced by the call to org.joda.time.DateTimeZone::getDefaultProvider()Lorg/joda/time/tz/Provider;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getID with a call to getDisplayName</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.TimeZone::getID()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.joda.time.tz.Provider::getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>31</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to org/joda/time/DateTimeZone::getConvertedId with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/TimeZone::getID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/DateTimeZone::getConvertedId</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/joda/time/tz/Provider::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>60</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>36</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>46</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>56</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>36</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>46</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>56</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.4082482904638631</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::forTimeZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>MethodNameMutator_0</mutator><index>247</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to cZoneIdConversion with an access to iFixedOffsetCache</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>247</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>247</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.Map::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>247</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>247</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to java/util/Map::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>249</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getConvertedId</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>247</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/Map::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>249</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3779644730092272</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::getConvertedId to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01769149641447584</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::getDefault()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01769149641447584</suspValue><description>replaced access to cDefault with an access to UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01769149641447584</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01769149641447584</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::getDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01769149641447584</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01769149641447584</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01769149641447584</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefault to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>the access to iID is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>the access to iID is guarded using field iID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>the access to field org.joda.time.DateTimeZone.iID is replaced by the call to org.joda.time.DateTimeZone::getID()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>the access to field org.joda.time.DateTimeZone.iID is replaced by the call to org.joda.time.DateTimeZone::toString()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>the access to iID is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>the access to iID is guarded returning field iID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04360207201969474</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::getID to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_0</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type java.lang.SecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_1</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using (Ljava/lang/SecurityManager;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_5</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>37</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::setDefault(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>removed call to java/lang/System::getSecurityManager</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018617745583356375</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>MethodNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>the call to factory method java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>MethodNameMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>the call to factory method java.lang.ref.SoftReference.get()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>the access to iZoneInfoMap is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>the access to iZoneInfoMap is guarded using field iZoneInfoMap</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>the call to java.util.Map::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>the call to java.lang.ref.SoftReference::get()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>the access to iZoneInfoMap is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08980265101338746</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>the call to get()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>replaced call to java/util/Map::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08980265101338746</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>removed call to java/util/Map::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>removed call to java/lang/ref/SoftReference::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>replaced return value with null for org/joda/time/tz/ZoneInfoProvider::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08703882797784893</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09016696346674323</suspValue><description>mutated return of Object value for org/joda/time/tz/ZoneInfoProvider::getZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForID_String_old(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
</mutations>
