<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V</methodDescription><lineNumber>1501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable iTransitions</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V</methodDescription><lineNumber>1502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable iWallOffsets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V</methodDescription><lineNumber>1503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable iStandardOffsets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V</methodDescription><lineNumber>1504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable iNameKeys</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V</methodDescription><lineNumber>1505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable iTailZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1401</lineNumber><mutator>MethodNameMutator_0</mutator><index>52</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.ArrayList.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1410</lineNumber><mutator>MethodNameMutator_0</mutator><index>94</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Transition.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>MethodNameMutator_0</mutator><index>372</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>MethodNameMutator_0</mutator><index>375</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>MethodNameMutator_0</mutator><index>407</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getID()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1410</lineNumber><mutator>MethodNameMutator_4</mutator><index>94</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Transition.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>MethodNameMutator_4</mutator><index>372</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>MethodNameMutator_4</mutator><index>375</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>MethodNameMutator_4</mutator><index>407</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getID()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>114</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Locale;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(JLorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(JLorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(JLorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>114</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Locale;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>114</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Locale;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(JLorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(JLorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>114</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Locale;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>114</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Locale;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>114</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Locale;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V with a call to &#60;init&#62;(JLorg/joda/time/PeriodType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>371</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iStartRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>374</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iEndRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>399</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iStartRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>409</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>411</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iStartRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>415</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iEndRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>113</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field java.util.Locale.ENGLISH is replaced by the call to java.util.Locale::getDefault()Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>113</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to ENGLISH with an access to FRENCH</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>113</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to ENGLISH with an access to GERMAN</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>113</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to ENGLISH with an access to ITALIAN</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>113</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to ENGLISH with an access to JAPANESE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>113</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to ENGLISH with an access to KOREAN</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>113</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to ENGLISH with an access to CHINESE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>52</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>80</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getWallOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>87</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getStandardOffset with a call to getWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1426</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>156</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getInstanceUTC with a call to getInstance</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to standard</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getYears with a call to getMonths</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getYears</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getYears</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>80</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getWallOffset with a call to getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>87</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getStandardOffset with a call to getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to yearMonthDayTime</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getYears with a call to getWeeks</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getWeeks</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getWeeks</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to yearWeekDayTime</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getYears with a call to getDays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getDays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getDays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to yearWeekDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getYears with a call to getHours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getHours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getHours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to yearDayTime</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getYears with a call to getMinutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getMinutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getMinutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to yearDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getYears with a call to getSeconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getSeconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getSeconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>150ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to dayTime</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getYears with a call to getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getMonths with a call to getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>259ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to time</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to years</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to yearMonthDay with a call to months</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>52</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>59</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::isTransitionFrom(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>80</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>87</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getStandardOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>94</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getNameKey()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>115</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.text.DateFormatSymbols::getZoneStrings()[[Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>144</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>243</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.Period::getYears()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.Period::getMonths()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.Period::getMonths()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>260</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>266</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>372</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getNameKey()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>375</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getNameKey()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>376</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>400</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getSaveMillis()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>407</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$DSTZone::getID()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>413</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::renameAppend(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>371</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iStartRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>374</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iEndRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>399</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iStartRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>409</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iStandardOffset is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>411</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iStartRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>415</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iEndRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>52</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>59</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to isTransitionFrom(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getMillis()J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>80</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getWallOffset()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>87</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getStandardOffset()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>94</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>115</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getZoneStrings()[[Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>144</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>243</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getYears()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getMonths()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getMonths()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>260</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>266</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>372</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>375</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>376</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>400</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to getSaveMillis()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>407</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>413</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to renameAppend(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>168</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>251</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>255</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>401</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>114</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/text/DateFormatSymbols::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>229</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Period::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>416</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$DSTZone::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>451</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>362</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>119</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>160</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>166</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>179</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>194</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>210</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>224</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>250</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>254</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>258</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>264</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>211</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>240</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>247</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>251</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>255</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>261</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>267</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>367</index><block>25</block><killingTests>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>46ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>11ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>377</index><block>26</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>381</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>401</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>440</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::isTransitionFrom</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>87</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/text/DateFormatSymbols::getZoneStrings</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>144</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>156</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/chrono/ISOChronology::getInstanceUTC</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>227</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/PeriodType::yearMonthDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>243</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>246</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Period::getYears</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>249</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Period::getMonths</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>253</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Period::getMonths</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>260</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>266</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>372</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>375</index><block>26</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>39ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>14ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>22ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>20ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>376</index><block>26</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>76ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>74ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>75ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>71ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>348ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>380</index><block>27</block><killingTests/><suspValue>1.0</suspValue><description>removed call to org/joda/time/tz/ZoneInfoCompiler::verbose</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>400</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>407</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$DSTZone::getID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>413</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::renameAppend</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>452</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone::create</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>135</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>139</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>145</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>236</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>240</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>244</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>247</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>261</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>267</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>367</index><block>25</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>16ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>27ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>21ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>23ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>377</index><block>26</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>76ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>73ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>73ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>54ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>320ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>381</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>440</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>135</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>139</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>145</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>236</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>240</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>244</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>247</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>261</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>267</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>367</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>377</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>381</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>440</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>125</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>168</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>251</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>255</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>401</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>125</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>168</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>251</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>255</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>401</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>452</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone::create to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>413</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::renameAppend with receiver</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>create</mutatedMethod><methodDescription>(Ljava/lang/String;ZLjava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;</methodDescription><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>362</index><block>24</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1690</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iTailZone is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1690</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iTailZone is guarded using field iTailZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1690</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iTailZone is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>9</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced boolean return with false for org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone::isCachable</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone</mutatedClass><mutatedMethod>isCachable</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>1691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Substituted 117 with 118</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Substituted 119 with 120</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Substituted 115 with 116</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iMode</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>49</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>54</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iAdvance</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(CIIIZI)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>59</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>MethodNameMutator_0</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>MethodNameMutator_0</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.millisOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>MethodNameMutator_0</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.millisOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>MethodNameMutator_0</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>MethodNameMutator_0</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>MethodNameMutator_2</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>MethodNameMutator_2</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.millisOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>MethodNameMutator_2</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.millisOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>MethodNameMutator_2</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>MethodNameMutator_2</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>MethodNameMutator_6</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>MethodNameMutator_6</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.millisOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>MethodNameMutator_6</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to factory method org.joda.time.Chronology.millisOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>MethodNameMutator_6</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>MethodNameMutator_6</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMode is guarded using value &#39;\0&#39;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>46</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMonthOfYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>63</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMillisOfDay is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>76</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iDayOfWeek is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>127</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to iMonthOfYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMode is guarded using field iMode</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>46</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMonthOfYear is guarded using field iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>63</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMillisOfDay is guarded using field iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>76</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iDayOfWeek is guarded using field iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>127</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to iMonthOfYear is guarded using field iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>46</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iMonthOfYear with an access to iDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>63</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iMillisOfDay with an access to iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>76</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iDayOfWeek with an access to iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>127</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced access to iMonthOfYear with an access to iDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>46</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iMonthOfYear with an access to iDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>63</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iMillisOfDay with an access to iDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>76</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iDayOfWeek with an access to iDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>127</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced access to iMonthOfYear with an access to iDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>46</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iMonthOfYear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>63</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iMillisOfDay with an access to iDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>76</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced access to iDayOfWeek with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>127</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced access to iMonthOfYear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>38</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to getInstanceUTC with a call to getInstance</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>71</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to setDayOfMonthNext with a call to setDayOfMonthPrevious</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>105</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>replaced call to setDayOfWeek with a call to setDayOfMonthNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>135</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to setDayOfMonthNext with a call to setDayOfMonthPrevious</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>142</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to setDayOfWeek with a call to setDayOfMonthNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>82ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to set with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to add with a call to set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>71</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to setDayOfMonthNext with a call to setDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>105</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>replaced call to setDayOfWeek with a call to setDayOfMonthPrevious</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to add with a call to set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to set with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>135</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to setDayOfMonthNext with a call to setDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>142</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to setDayOfWeek with a call to setDayOfMonthPrevious</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>71</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to setDayOfMonthNext with a call to setDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>105</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>replaced call to setDayOfWeek with a call to setDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>135</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to setDayOfMonthNext with a call to setDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>142</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to setDayOfWeek with a call to setDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>60</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>60</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>60</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>60</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to monthOfYear with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to halfdayOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>60</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to millisOfDay with a call to halfdayOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to year with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to monthOfYear with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.Chronology::monthOfYear()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.DateTimeField::set(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.Chronology::millisOfDay()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.DateTimeField::set(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.Chronology::millisOfDay()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.DateTimeField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>71</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$OfYear::setDayOfMonthNext(Lorg/joda/time/Chronology;J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>105</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$OfYear::setDayOfWeek(Lorg/joda/time/Chronology;J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to org.joda.time.Chronology::year()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to org.joda.time.DateTimeField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to org.joda.time.Chronology::monthOfYear()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to org.joda.time.DateTimeField::set(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>135</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$OfYear::setDayOfMonthNext(Lorg/joda/time/Chronology;J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>142</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$OfYear::setDayOfWeek(Lorg/joda/time/Chronology;J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMode is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>46</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMonthOfYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>63</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iMillisOfDay is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>76</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iDayOfWeek is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>127</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to iMonthOfYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to monthOfYear()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to set(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to millisOfDay()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to set(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to millisOfDay()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to add(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>565</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>71</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to setDayOfMonthNext(Lorg/joda/time/Chronology;J)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>105</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>the call to setDayOfWeek(Lorg/joda/time/Chronology;J)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to year()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to add(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to monthOfYear()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to set(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>135</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to setDayOfMonthNext(Lorg/joda/time/Chronology;J)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>578</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>142</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>the call to setDayOfWeek(Lorg/joda/time/Chronology;J)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to org/joda/time/DateTimeField::set with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to org/joda/time/DateTimeField::set with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to org/joda/time/DateTimeField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>71</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonthNext with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>105</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfWeek with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to org/joda/time/DateTimeField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to org/joda/time/DateTimeField::set with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>135</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonthNext with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>142</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfWeek with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>Substituted 119 with 120</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>118</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/chrono/ISOChronology::getInstanceUTC</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/Chronology::monthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/DateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/Chronology::millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/DateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/Chronology::millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/DateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonthNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>105</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>116</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>removed call to org/joda/time/Chronology::year</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>119</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>removed call to org/joda/time/DateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>124</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>removed call to org/joda/time/Chronology::monthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>128</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>removed call to org/joda/time/DateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>135</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonthNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>142</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09950371902099892</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>150</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>112</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>112</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09853292781642932</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>150</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>MethodNameMutator_0</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>MethodNameMutator_0</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>MethodNameMutator_0</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>MethodNameMutator_2</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>MethodNameMutator_2</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>MethodNameMutator_2</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>MethodNameMutator_6</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>MethodNameMutator_6</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>MethodNameMutator_6</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to iDayOfMonth is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>38</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the access to iDayOfMonth is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to iDayOfMonth is guarded using field iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>38</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the access to iDayOfMonth is guarded using field iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>replaced access to iDayOfMonth with an access to iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>38</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced access to iDayOfMonth with an access to iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>replaced access to iDayOfMonth with an access to iDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>38</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced access to iDayOfMonth with an access to iDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>replaced access to iDayOfMonth with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>38</index><block>24</block><killingTests>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced access to iDayOfMonth with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test><test><name>org.joda.time.TestMutableInterval_Constructors.testConstructor_RI_RD1(org.joda.time.TestMutableInterval_Constructors)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to set with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add with a call to set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to add with a call to set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to monthOfYear with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to dayOfMonth with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to org.joda.time.Chronology::dayOfMonth()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to org.joda.time.DateTimeField::set(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to org.joda.time.Chronology::monthOfYear()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to org.joda.time.DateTimeField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to org.joda.time.Chronology::dayOfMonth()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to org.joda.time.DateTimeField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to iDayOfMonth is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>38</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the access to iDayOfMonth is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to dayOfMonth()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to set(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to monthOfYear()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to add(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to dayOfMonth()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>the call to add(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to org/joda/time/DateTimeField::set with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to org/joda/time/DateTimeField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>replaced call to org/joda/time/DateTimeField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed call to org/joda/time/Chronology::dayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed call to org/joda/time/DateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed call to org/joda/time/Chronology::monthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed call to org/joda/time/DateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed call to org/joda/time/Chronology::dayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed call to org/joda/time/DateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>44</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonth</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>682</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>11</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>catch type java/lang/IllegalArgumentException is replaced with java/lang/RuntimeException</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>672</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to setDayOfMonth with a call to setDayOfMonthNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>672</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to setDayOfMonth with a call to setDayOfMonthPrevious</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>672</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>6</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to setDayOfMonth with a call to setDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>672</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$OfYear::setDayOfMonth(Lorg/joda/time/Chronology;J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>672</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to setDayOfMonth(Lorg/joda/time/Chronology;J)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>55</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonthNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfMonthNext</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfMonthNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfWeek()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>MethodNameMutator_0</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfWeek()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>MethodNameMutator_2</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfWeek()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>MethodNameMutator_2</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfWeek()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>MethodNameMutator_6</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfWeek()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>MethodNameMutator_6</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfWeek()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the access to iDayOfWeek is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>720</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the access to iAdvance is guarded using value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the access to iDayOfWeek is guarded using field iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>720</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the access to iAdvance is guarded using field iAdvance</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced access to iDayOfWeek with an access to iMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced access to iDayOfWeek with an access to iDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>11</index><block>25</block><killingTests>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced access to iDayOfWeek with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZone.testGetOffset_RI(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test><test><name>org.joda.time.TestMutableInterval_Constructors.testConstructor_RI_RD1(org.joda.time.TestMutableInterval_Constructors)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to get with a call to getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to add with a call to set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>6</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to get with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to dayOfWeek with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to org.joda.time.Chronology::dayOfWeek()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to org.joda.time.DateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to org.joda.time.Chronology::dayOfWeek()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to org.joda.time.DateTimeField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the access to iDayOfWeek is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>720</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the access to iAdvance is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to dayOfWeek()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to dayOfWeek()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>the call to add(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced call to org/joda/time/DateTimeField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed call to org/joda/time/Chronology::dayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed call to org/joda/time/DateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed call to org/joda/time/Chronology::dayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed call to org/joda/time/DateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>50</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>35</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>35</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04116934847963091</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$OfYear</mutatedClass><mutatedMethod>setDayOfWeek</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;J)J</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04096159602595203</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$OfYear::setDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03747658444979307</suspValue><description>replaced int return with 0 for org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03742405942825599</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03747658444979307</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>42</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>replaced long return with 0 for org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03227486121839514</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>42</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>replaced long return with 0 for org/joda/time/field/FieldUtils::safeSubtract</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeSubtract</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0663723311599972</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/FieldUtils::safeSubtract</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>Substituted -2147483648 with -2147483647</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>15</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05913123959890826</suspValue><description>replaced int return with 0 for org/joda/time/field/FieldUtils::safeToInt</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.058520573598065284</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeToInt</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05913123959890826</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>965</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>17</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iUpperYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::setStandardOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>965</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>17</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>965</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>17</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>17</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialSaveMillis is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>36</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>42</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperOfYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::setStandardOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>30</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iInitialSaveMillis is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>31</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iInitialSaveMillis is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::setStandardOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>36</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iUpperYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>37</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iUpperYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::setStandardOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iInitialSaveMillis with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>31</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iInitialSaveMillis with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>36</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>37</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>30</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iInitialSaveMillis with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>31</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iInitialSaveMillis with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>36</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>37</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialNameKey is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialSaveMillis is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>36</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperYear is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>42</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperOfYear is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>17</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialNameKey is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>30</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialSaveMillis is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>36</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperYear is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>42</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperOfYear is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialNameKey is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>30</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialSaveMillis is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>36</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperYear is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>42</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperOfYear is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>18</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iInitialNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>37</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;)V</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>43</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iUpperOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using field iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using field iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to contains with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to contains with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::contains(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to contains(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to contains(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to contains(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to contains(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to contains(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>3</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::contains</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>4</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>3</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>addRule</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.ArrayList.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>MethodNameMutator_0</mutator><index>21</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.ArrayList.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>40</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>42</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>44</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using field iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using field iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using field iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>40</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iStandardOffset is guarded using field YEAR_LIMIT</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>40</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>40</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced access to iStandardOffset with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>40</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced access to iStandardOffset with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>27</index><block>37</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>replaced call to getToYear with a call to getFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>24ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>8ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>31</index><block>38</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>replaced call to getToYear with a call to getFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>22ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>6ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>27</index><block>37</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>replaced call to getToYear with a call to getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>22ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>31</index><block>38</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>replaced call to getToYear with a call to getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>23ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>6ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getToYear()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>38</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getToYear()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>40</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iStandardOffset is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>42</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>44</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>the access to iRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getToYear()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>38</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getToYear()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>45</index><block>39</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$DSTZone::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>21ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>6ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>36</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>29ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>16ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>15ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>17ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>37</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>15ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>13ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>37ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>38</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>15ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>36</block><killingTests>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>37</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>39ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>86ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>147ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>46ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>58ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>27ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>420ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>38</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>17ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>36</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>26ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>11ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>37</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Rule::getToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>11ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>38</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Rule::getToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>22ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>46</index><block>39</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::buildTailZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>34ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>14ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>21ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>19ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>36</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>31ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>14ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>37</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>23ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>13ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>38</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>18ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>38</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>buildTailZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>39</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::buildTailZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>17ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>13ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>6ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>13ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>0ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1011</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1044</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>108</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1011</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialNameKey is guarded using field iInitialNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded using field iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1044</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>108</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded using field YEAR_LIMIT</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1044</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>108</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1044</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>108</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iStandardOffset with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1044</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>108</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iStandardOffset with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>99</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getSaveMillis with a call to getFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>99</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getSaveMillis with a call to getToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1029</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>47</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::nextTransition(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1030</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>54</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>99</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getSaveMillis()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1011</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iInitialNameKey is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRules is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1044</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>108</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1029</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>47</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to nextTransition(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1030</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>54</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getMillis()J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>99</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>109</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::nextTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>99</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Rule::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1067</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>157</index><block>19</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::firstTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>50</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>61</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>82</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>100</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>120</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>50</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>61</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>82</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>100</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>120</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>78</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>78</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1067</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>157</index><block>19</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::firstTransition to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>firstTransition</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>153</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperYear is guarded using field YEAR_LIMIT</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iUpperYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iUpperYear with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iUpperYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 9223372036854775807 with -9223372036854775808</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>10</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::getUpperLimit</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>getUpperLimit</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::getUpperLimit</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>MethodNameMutator_0</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>MethodNameMutator_1</mutator><index>17</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to factory method java.util.ArrayList.iterator()Ljava/util/Iterator; is replaced by an instantiation of type org.hamcrest.internal.ArrayIterator using (Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>MethodNameMutator_2</mutator><index>17</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to factory method java.util.ArrayList.iterator()Ljava/util/Iterator; is replaced by an instantiation of type org.hamcrest.internal.SelfDescribingValueIterator using (Ljava/util/Iterator;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>MethodNameMutator_2</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>MethodNameMutator_6</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRules is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>35</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>92</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iUpperYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>80ms</time></test></testsExecutionTime><patchExecutionTime>152ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>123</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRules is guarded using field iRules</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>35</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded using field YEAR_LIMIT</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>92</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iUpperYear is guarded using field YEAR_LIMIT</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>123</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded using field YEAR_LIMIT</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>35</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>92</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iUpperYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>123</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>35</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iStandardOffset with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>92</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iUpperYear with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>123</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iStandardOffset with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>35</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iStandardOffset with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>92</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iUpperYear with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>123</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iStandardOffset with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1082</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>3</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to getInstanceUTC with a call to getInstance</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>82</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>82</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>82</index><block>27</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::iterator()Ljava/util/Iterator; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1089</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.Iterator::hasNext()Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1090</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.Iterator::next()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>37</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::next(JII)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.Chronology::year()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>82</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.DateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRules is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>35</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>92</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iUpperYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>123</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iStandardOffset is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to iterator()Ljava/util/Iterator; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1089</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to hasNext()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1090</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to next()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>37</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to next(JII)J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to year()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(J)I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>37</index><block>21</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$Rule::next with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>124</index><block>32</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>20</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 9223372036854775807 with -9223372036854775808</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>93</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>20</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>21</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>23</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>25</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>27</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/chrono/ISOChronology::getInstanceUTC</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::iterator</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>20</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/Iterator::hasNext</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Rule::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Chronology::year</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/DateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>125</index><block>32</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::nextTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>20</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>72</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>72</index><block>25</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>44</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>57</index><block>23</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>84</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>94</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>44</index><block>21</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>0ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>57</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>84</index><block>27</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>94</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>nextTransition</mutatedMethod><methodDescription>(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;</methodDescription><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>125</index><block>32</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$RuleSet::nextTransition to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>985</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$RuleSet.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::setStandardOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>985</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iInitialSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>985</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iUpperYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$RuleSet</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>63ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Removed assignment to member variable iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>40</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using field iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>40</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using field iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>44</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>56ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>44</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>44</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>40</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>43</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>49</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder::addCutover</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addCutover</mutatedMethod><methodDescription>(ICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder::addCutover to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>39</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder::getLastRuleSet()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getLastRuleSet()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>41</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to addRule(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>41</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::addRule(Lorg/joda/time/tz/DateTimeZoneBuilder$Rule;)V is guarded</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>25</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>34</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Rule::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder::getLastRuleSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>45</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder::addRecurringSavings</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder::addRecurringSavings to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addRecurringSavings</mutatedMethod><methodDescription>(Ljava/lang/String;IIICIIIZI)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>5</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::addRule</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>410</lineNumber><mutator>MethodNameMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.ArrayList.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>MethodNameMutator_0</mutator><index>54</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.util.ArrayList.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>32</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>54</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>56</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getWallOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>61</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getWallOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>427</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>89</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>32</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>56</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getWallOffset with a call to getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>61</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getWallOffset with a call to getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>427</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>89</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>33</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::isTransitionFrom(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>54</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>56</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>61</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>66</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>74</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>427</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>89</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.util.ArrayList::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to size()I is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>33</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to isTransitionFrom(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>54</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>56</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getWallOffset()I is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>421</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>61</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getWallOffset()I is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>66</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getMillis()J is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>74</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getMillis()J is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>427</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>89</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>19</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced boolean return with false for org/joda/time/tz/DateTimeZoneBuilder::addTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>94</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced boolean return with false for org/joda/time/tz/DateTimeZoneBuilder::addTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>41</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>93</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>134ms</time></test></testsExecutionTime><patchExecutionTime>154ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>32</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::isTransitionFrom</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>92ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>61</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>89</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/util/ArrayList::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>34</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>84</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>34</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>84</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>addTransition</mutatedMethod><methodDescription>(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>94</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>MethodNameMutator_0</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to factory method java.util.ArrayList.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using field iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using field iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using field iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>83ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>30</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder::getLastRuleSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>getLastRuleSet</mutatedMethod><methodDescription>()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder::getLastRuleSet to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder::getLastRuleSet()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to getLastRuleSet()Lorg/joda/time/tz/DateTimeZoneBuilder$RuleSet; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to setStandardOffset(I)V is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::setStandardOffset(I)V is guarded</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder::getLastRuleSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder::setStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder::setStandardOffset to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>setStandardOffset</mutatedMethod><methodDescription>(I)Lorg/joda/time/tz/DateTimeZoneBuilder;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::setStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>MethodNameMutator_0</mutator><index>48</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to factory method java.util.ArrayList.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>46</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using field iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>46</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded using field iRuleSets</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>48</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>79</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to getSaveMillis with a call to getWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>119</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getSaveMillis with a call to getWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>397</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>205</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isCachable with a call to isFixed</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>79</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to getSaveMillis with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>119</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getSaveMillis with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>33</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>48</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>55</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::firstTransition(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>69</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder::addTransition(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>356</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>74</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>79</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>362</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>93</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::nextTransition(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>102</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder::addTransition(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>114</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>119</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>134</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::buildTailZone(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>141</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$RuleSet::getUpperLimit(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>150</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>171</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to java.util.ArrayList::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>397</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>205</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone::isCachable()Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>46</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iRuleSets is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>33</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>48</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>351</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>55</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to firstTransition(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>69</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to addTransition(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>356</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>74</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to getMillis()J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>79</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to getSaveMillis()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>362</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>93</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to nextTransition(JI)Lorg/joda/time/tz/DateTimeZoneBuilder$Transition; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>102</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to addTransition(Ljava/util/ArrayList;Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>114</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getMillis()J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>370</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>119</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>134</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to buildTailZone(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>141</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to getUpperLimit(I)J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>150</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>171</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>397</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>205</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to isCachable()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>86</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>145</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>10</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>18</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>50ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>121ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>121ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>59ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>79ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>35ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>499ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>172</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>18</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>10ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>42ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>19ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>24ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>10</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>11</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>13</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>17</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>29ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>14ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>18ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>18</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>6ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>28ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>8ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>21</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>175</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>206</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>10</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>11</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::firstTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder::addTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>13</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::nextTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>102</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder::addTransition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>17</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>119</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Transition::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>19</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::buildTailZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>71ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>136ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>119ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>102ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>85ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>38ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>604ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>141</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$RuleSet::getUpperLimit</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>150</index><block>21</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>171</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to java/util/ArrayList::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>200</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone::create</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>205</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone::isCachable</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>210</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/joda/time/tz/CachedDateTimeZone::forZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>211</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder::toDateTimeZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>96</index><block>13</block><killingTests>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>103</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>107</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>124</index><block>17</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>43ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>16ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>25ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>174ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>129</index><block>18</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>8ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>33ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>17ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>14ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>18ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>151</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>173</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>175</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>206</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>11</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>96</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>103</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>107</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>124</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>129</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>151</index><block>21</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>0ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>173</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>175</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>206</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>42</index><block>10</block><killingTests>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testFixed(org.joda.time.tz.TestBuilder)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>42</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder</mutatedClass><mutatedMethod>toDateTimeZone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>211</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.4082482904638631</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder::toDateTimeZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>49</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>57</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>115</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>124</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>141</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>49</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded using field MIN</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>57</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded using field MIN</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>115</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>124</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>141</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>49</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMinimumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>57</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMinimumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>49</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>57</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>49</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>replaced access to iMax with an access to iLeapMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>57</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>replaced access to iMax with an access to iLeapMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMillisOfDay(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>119</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(JII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>127</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDaysInYearMonth(II)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>145</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMonthDayMillis(III)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>49</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>57</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>115</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>124</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>141</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>27</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>49</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>57</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>the access to iMax is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>115</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>124</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>141</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getMillisOfDay(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getYear(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>119</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>127</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getDaysInYearMonth(II)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>145</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getYearMonthDayMillis(III)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getMillisOfDay(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getYear(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>30</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>119</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>127</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getDaysInYearMonth(II)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>145</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>the call to getYearMonthDayMillis(III)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getMonthOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>119</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDayOfMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>127</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDaysInYearMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039283710065919304</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038984058779272523</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>119</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>127</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDaysInYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMonthDayMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>152</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicMonthOfYearDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038984058779272523</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038984058779272523</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>43</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>133</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>43</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>133</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>152</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039103094350288754</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicMonthOfYearDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>26</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>34</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>41</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>53</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iMax is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>66</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>76</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>108</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>118</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>26</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>34</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>41</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>53</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iMax is guarded using field MIN</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>66</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>76</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>108</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>118</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>53</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMinimumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>53</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>53</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced access to iMax with an access to iLeapMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>36</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>44</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>70</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(JII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>79</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDaysInYearMonth(II)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>111</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMonthMillis(II)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>121</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMonthMillis(II)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>26</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>34</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>41</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>53</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iMax is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>66</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>76</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>108</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>118</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>26</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>34</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>41</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>53</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iMax is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>66</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>76</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>108</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>118</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYear(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>36</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYear(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>70</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>79</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getDaysInYearMonth(II)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>111</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYearMonthMillis(II)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>121</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYearMonthMillis(II)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYear(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>36</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYear(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>44</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>70</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>79</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getDaysInYearMonth(II)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>111</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYearMonthMillis(II)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>121</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>the call to getYearMonthMillis(II)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>29</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getMonthOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>44</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getMonthOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>70</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDayOfMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>79</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDaysInYearMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>129</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDaysInYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>111</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>121</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>139</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicMonthOfYearDateTimeField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>80</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>80</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>129</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>129</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>139</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11322770341445956</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicMonthOfYearDateTimeField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iMax is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>44</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>50</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iMax is guarded using field MIN</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>44</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>50</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>7</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMinimumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>7</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to field org.joda.time.chrono.BasicMonthOfYearDateTimeField.iMax is replaced by the call to org.joda.time.chrono.BasicMonthOfYearDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>7</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced access to iMax with an access to iLeapMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDaysInYearMonth(II)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>48</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMonthDayMillis(III)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>52</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMillisOfDay(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iMax is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>44</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>50</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>7</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iMax is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>12</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>27</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>44</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>50</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to getYear(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to getDayOfMonth(JI)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to getDaysInYearMonth(II)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>48</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getYearMonthDayMillis(III)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>52</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getMillisOfDay(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to getYear(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to getDayOfMonth(JI)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>30</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>the call to getDaysInYearMonth(II)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>48</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getYearMonthDayMillis(III)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>52</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getMillisOfDay(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDayOfMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDaysInYearMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDaysInYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMonthDayMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>55</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicMonthOfYearDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>36</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>36</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicMonthOfYearDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03407990882954985</suspValue><description>removed call to org/joda/time/field/FieldUtils::verifyValueBounds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced call to getDaysInMonthMax(J)I with a call to getDaysInMonthMax(I)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced call to getDaysInMonthMax(J)I with a call to getDaysInMonthMax(I)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced call to getDaysInMonthMax(J)I with a call to getDaysInMonthMax(I)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced call to getDaysInMonthMax(J)I with a call to getDaysInMonthMax(I)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced call to getDaysInMonthMax(J)I with a call to getDaysInMonthMax(I)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced call to getDaysInMonthMax(J)I with a call to getDaysInMonthMax(I)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getDaysInMonthMax(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>the call to getDaysInMonthMax(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>50</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>51</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>50</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>Substituted 28 with 29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>51</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>53</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>Substituted 28 with 29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>50</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>51</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>52</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getDaysInMonthMax</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>17</index><block>53</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicGJChronology::getDaysInMonthMaxForSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>50</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>51</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>50</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>51</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInMonthMaxForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>53</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03460642701029914</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>48</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03774256780481986</suspValue><description>replaced access to MAX_DAYS_PER_MONTH_ARRAY with an access to MIN_DAYS_PER_MONTH_ARRAY</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>17</index><block>49</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02933573244244288</suspValue><description>replaced access to MIN_DAYS_PER_MONTH_ARRAY with an access to MAX_DAYS_PER_MONTH_ARRAY</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>47</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027186362391351842</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>47</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027186362391351842</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>48</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03774256780481986</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>49</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02933573244244288</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>48</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03774256780481986</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>49</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02933573244244288</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>47</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027186362391351842</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>47</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027186362391351842</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>14</index><block>48</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03774256780481986</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicGJChronology::getDaysInYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>22</index><block>49</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02933573244244288</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicGJChronology::getDaysInYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>47</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027186362391351842</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>47</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027186362391351842</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>48</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03774256780481986</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>49</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02933573244244288</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>128</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><block>42</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>149</index><block>44</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 15356250 with 15356251</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 7678125 with 7678126</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 2615625 with 2615626</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 5062500 with 5062501</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 10209375 with 10209376</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 12825000 with 12825001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 23118750 with 23118751</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 17971875 with 17971876</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 7 with 8</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 20587500 with 20587501</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 9 with 10</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>73</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 25734375 with 25734376</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 28265625 with 28265626</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>81</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 11 with 12</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 15271875 with 15271876</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 7593750 with 7593751</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 2615625 with 2615626</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>27</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 4978125 with 4978126</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>102</index><block>29</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>30</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 10125000 with 10125001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>111</index><block>32</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>115</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 12740625 with 12740626</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>34</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>120</index><block>35</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 23034375 with 23034376</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 17887500 with 17887501</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>129</index><block>38</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 7 with 8</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 20503125 with 20503126</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>135</index><block>40</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>41</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 9 with 10</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>42</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 25650000 with 25650001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>144</index><block>43</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>148</index><block>44</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 28181250 with 28181251</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>150</index><block>45</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 11 with 12</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>153</index><block>46</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>42</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>44</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>155</index><block>46</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicGJChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>23</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>41</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>56</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>59</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>65</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>74</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>80</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>89</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>92</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>95</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>101</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>110</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>116</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>125</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>128</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>134</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>143</index><block>42</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>149</index><block>44</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>23</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>41</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>56</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>59</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>65</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>74</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>80</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>89</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>92</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>95</index><block>26</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>101</index><block>28</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>110</index><block>31</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>116</index><block>33</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>125</index><block>36</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>128</index><block>37</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>134</index><block>39</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>143</index><block>42</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>149</index><block>44</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>155</index><block>46</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>55</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03840476863212843</suspValue><description>replaced access to MAX_TOTAL_MILLIS_BY_MONTH_ARRAY with an access to MIN_TOTAL_MILLIS_BY_MONTH_ARRAY</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>17</index><block>56</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027983662310423867</suspValue><description>replaced access to MIN_TOTAL_MILLIS_BY_MONTH_ARRAY with an access to MAX_TOTAL_MILLIS_BY_MONTH_ARRAY</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>the call to isLeapYear(I)Z is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>55</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03840476863212843</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>56</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027983662310423867</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>55</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03840476863212843</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>56</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027983662310423867</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>14</index><block>55</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03840476863212843</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicGJChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>22</index><block>56</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027983662310423867</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicGJChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>54</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026370633137494492</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>55</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03840476863212843</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicGJChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>56</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027983662310423867</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicGJChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>39</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>62</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYear(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYear(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>62</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYear(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYear(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYearMillis(I)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYearMillis(I)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>39</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>62</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYear(J)I is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYear(J)I is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYearMillis(I)J is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getYearMillis(I)J is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>39</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to isLeapYear(I)Z is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>62</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>the call to isLeapYear(I)Z is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>61</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><block>63</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><block>64</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.30151134457776363</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>Substituted 5097600000 with 5097600001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>61</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>Substituted 5097600000 with 5097600001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>63</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>61</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>63</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>89</index><block>64</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicGJChronology::getYearDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>63</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>58</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>63</index><block>62</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>34</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>59</index><block>61</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>81</index><block>63</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>34</index><block>57</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>59</index><block>61</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.17407765595569785</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>81</index><block>63</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>64</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11704114719613057</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicGJChronology::getYearDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getYearDifference</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>84</index><block>64</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>replaced call to getDayOfYear with a call to getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>replaced call to getDayOfYear with a call to getDaysInMonthMaxForSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getDayOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getMillisOfDay(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>35</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>56</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYearMonthDayMillis(III)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getYear(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getDayOfYear(JI)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getMillisOfDay(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>35</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>56</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getYearMonthDayMillis(III)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getYear(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getDayOfYear(JI)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getMillisOfDay(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>35</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>45</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>56</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getYearMonthDayMillis(III)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getYear(J)I is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getDayOfYear(JI)I is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getMillisOfDay(J)I is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>29</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>the call to isLeapYear(I)Z is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>35</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>the call to isLeapYear(I)Z is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>45</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>the call to isLeapYear(I)Z is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>56</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>the call to getYearMonthDayMillis(III)J is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>replaced call to org/joda/time/chrono/BasicGJChronology::getDayOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>68</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.051502620262460476</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07106690545187015</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>Substituted 59 with 60</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>65</block><killingTests>org.joda.time.TestLocalDateTime_Basics.testWithField_DateTimeFieldType_int_3(org.joda.time.TestLocalDateTime_Basics)</killingTests><suspValue>0.03357671389365373</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.TestLocalDateTime_Basics.testWithField_DateTimeFieldType_int_3(org.joda.time.TestLocalDateTime_Basics)</name><time>13ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYearMonthDayMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>68</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicGJChronology::setYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>36</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>46</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>66</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.036297700432031385</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>36</index><block>67</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.048393391849582724</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>46</index><block>69</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.045501575519329006</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>24</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>24</index><block>65</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03357671389365373</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicGJChronology::setYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>39</index><block>68</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.051502620262460476</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>setYear</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>49</index><block>70</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07106690545187015</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear with a call to getWeekOfWeekyear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getWeekyear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getMonthOfYear with a call to getDaysInMonthMaxForSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getWeekOfWeekyear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to getYear with a call to getDaysInMonthMax</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(JII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getYear(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getYear(J)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getYear(J)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getMonthOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDayOfMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028194193721730047</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear with a call to getWeekOfWeekyear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to getMonthOfYear with a call to getDaysInMonthMaxForSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(JII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getMonthOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDayOfMonth with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>15</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03411955969674702</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>replaced call to getTotalMillisByYearMonth with a call to getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getTotalMillisByYearMonth(II)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>13</block><killingTests>org.joda.time.TestMonthDay_Constructors.testConstructor_long1_Chronology(org.joda.time.TestMonthDay_Constructors)</killingTests><suspValue>0.02762894819977688</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestMonthDay_Constructors.testConstructor_long1_Chronology(org.joda.time.TestMonthDay_Constructors)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>26</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02762894819977688</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0377694787300249</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>69ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0377694787300249</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>Substituted 86399999 with 86400000</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>Substituted -3 with -2</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 7 with 8</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 7 with 8</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.20851441405707477</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>18</block><killingTests>org.joda.time.chrono.TestIslamicChronology.testSampleDate1(org.joda.time.chrono.TestIslamicChronology)</killingTests><suspValue>0.20851441405707477</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.chrono.TestIslamicChronology.testSampleDate1(org.joda.time.chrono.TestIslamicChronology)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.20851441405707477</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0377694787300249</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0377694787300249</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>27</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>15</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0377694787300249</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>27</index><block>17</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfWeek</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>485</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>485</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>485</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>485</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>485</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>485</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>17</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>14</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03219113899898252</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03259906833194042</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03259906833194042</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.032773676267223106</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 86399999 with 86400000</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.032773676267223106</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03259906833194042</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.032773676267223106</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>24</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03259906833194042</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>20</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03259906833194042</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>21</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.032773676267223106</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMillisOfDay</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>22</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0854357657716761</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getAverageMillisPerYearDividedByTwo with a call to getAverageMillisPerYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getApproxMillisAtEpochDividedByTwo with a call to getAverageMillisPerYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>40</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestMonthDay_Constructors.testConstructor_long1_Chronology(org.joda.time.TestMonthDay_Constructors)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getAverageMillisPerYearDividedByTwo with a call to getAverageMillisPerMonth</description><testsExecutionTime><test><name>org.joda.time.TestMonthDay_Constructors.testConstructor_long1_Chronology(org.joda.time.TestMonthDay_Constructors)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.TestMonthDay_Basics.testGetField(org.joda.time.TestMonthDay_Basics)</name><time>2ms</time></test><test><name>org.joda.time.TestMonthDay_Basics.testGetFields(org.joda.time.TestMonthDay_Basics)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getApproxMillisAtEpochDividedByTwo with a call to getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>40</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getAverageMillisPerYearDividedByTwo with a call to getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced call to getApproxMillisAtEpochDividedByTwo with a call to getAverageMillisPerMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getAverageMillisPerYearDividedByTwo()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getApproxMillisAtEpochDividedByTwo()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>40</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getAverageMillisPerYearDividedByTwo()J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getApproxMillisAtEpochDividedByTwo()J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>40</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getAverageMillisPerYearDividedByTwo()J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getApproxMillisAtEpochDividedByTwo()J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>40</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getAverageMillisPerYearDividedByTwo()J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getApproxMillisAtEpochDividedByTwo()J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>40</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1543033499620919</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>Substituted 31536000000 with 31536000001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1543033499620919</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1543033499620919</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTests>org.joda.time.TestMonthDay_Constructors.testConstructor_long1_Chronology(org.joda.time.TestMonthDay_Constructors)</killingTests><suspValue>0.0265092566603795</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestMonthDay_Constructors.testConstructor_long1_Chronology(org.joda.time.TestMonthDay_Constructors)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test><test><name>org.joda.time.TestMonthDay_Basics.testGetField(org.joda.time.TestMonthDay_Basics)</name><time>15ms</time></test><test><name>org.joda.time.TestMonthDay_Basics.testGetFields(org.joda.time.TestMonthDay_Basics)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>97</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>53</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>63</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>53</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>63</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>97</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0265092566603795</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>56</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iYearInfoCache is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>31</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to iYearInfoCache is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iYearInfoCache is guarded using field iYearInfoCache</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iYear is guarded using field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>31</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to iYearInfoCache is guarded using field iYearInfoCache</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>25</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to calculateFirstDayOfYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>25</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to calculateFirstDayOfYearMillis with a call to getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to org.joda.time.chrono.BasicChronology::calculateFirstDayOfYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iYearInfoCache is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>31</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to iYearInfoCache is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to calculateFirstDayOfYearMillis(I)J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>26</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed call to org/joda/time/chrono/BasicChronology$YearInfo::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>Substituted 1023 with 1024</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>Substituted 1023 with 1024</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>40</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>replaced return value with null for org/joda/time/chrono/BasicChronology::getYearInfo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>23</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>24</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>25</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>mutated return of Object value for org/joda/time/chrono/BasicChronology::getYearInfo to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iFirstDayMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iFirstDayMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iFirstDayMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the access to iFirstDayMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the call to getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>the call to getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearInfo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02557385846437822</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>replaced call to getTotalMillisByYearMonth with a call to getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getTotalMillisByYearMonth(II)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to getYearMillis(I)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>26</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicChronology::getYearMonthDayMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027410122234342145</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicChronology::getYearMonthDayMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>371</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>replaced call to getTotalMillisByYearMonth with a call to getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>371</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>371</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getTotalMillisByYearMonth(II)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>371</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>371</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>the call to getYearMillis(I)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicChronology::getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthMillis</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.05892556509887897</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicChronology::getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>282</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>the call to factory method org.joda.time.DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>MethodNameMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>the call to factory method org.joda.time.Chronology.years()Lorg/joda/time/DurationField; is replaced by an instantiation of type org.joda.time.DurationField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>MethodNameMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>the call to factory method org.joda.time.Chronology.months()Lorg/joda/time/DurationField; is replaced by an instantiation of type org.joda.time.DurationField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>MethodNameMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>the call to factory method org.joda.time.Chronology.days()Lorg/joda/time/DurationField; is replaced by an instantiation of type org.joda.time.DurationField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>the access to iOrdinal is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>the access to iOrdinal is guarded using field iOrdinal</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to millis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to millis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to millis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to seconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to seconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to seconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to minutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to minutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to minutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to hours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to hours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to hours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to halfdays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to halfdays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to halfdays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to days</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to days</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to weeks</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to weeks</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to weeks</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to weekyears</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to weekyears</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to weekyears</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to months</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to months</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to years</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to years</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced call to years with a call to centuries</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced call to months with a call to centuries</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to days with a call to centuries</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>the call to org.joda.time.Chronology::years()Lorg/joda/time/DurationField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>the call to org.joda.time.Chronology::months()Lorg/joda/time/DurationField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>the call to org.joda.time.Chronology::days()Lorg/joda/time/DurationField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>the access to iOrdinal is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>the call to years()Lorg/joda/time/DurationField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>the call to months()Lorg/joda/time/DurationField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>the call to days()Lorg/joda/time/DurationField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getChronology with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>removed call to org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>removed call to org/joda/time/Chronology::years</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>removed call to org/joda/time/Chronology::months</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>removed call to org/joda/time/Chronology::days</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>30</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>replaced return value with null for org/joda/time/DurationFieldType$StandardDurationFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>35</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>replaced return value with null for org/joda/time/DurationFieldType$StandardDurationFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>45</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced return value with null for org/joda/time/DurationFieldType$StandardDurationFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07053456158585983</suspValue><description>mutated return of Object value for org/joda/time/DurationFieldType$StandardDurationFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04564354645876384</suspValue><description>mutated return of Object value for org/joda/time/DurationFieldType$StandardDurationFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>mutated return of Object value for org/joda/time/DurationFieldType$StandardDurationFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_10</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 10 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_11</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 11 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 4 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 5 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_6</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 6 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_7</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 7 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_8</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 8 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_9</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>RemoveSwitch 9 mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DurationFieldType.java</sourceFile><mutatedClass>org.joda.time.DurationFieldType$StandardDurationFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03651483716701107</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;II)V</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iRecurrence</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;II)V</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;II)V</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>MethodNameMutator_4</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded using field iRecurrence</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getNameKey()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>6</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/tz/DateTimeZoneBuilder$Rule::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$Rule::getNameKey to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded using field iRecurrence</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getSaveMillis()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded returning field iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning field iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning field iToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced int return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Rule::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iToYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iToYear is guarded using field iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iToYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getFromYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>15ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>31ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>46ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>23ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>28ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>11ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iToYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getToYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iToYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>14ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>29ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>19ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>24ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>144ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>replaced access to iToYear with an access to iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>8ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>22ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>23ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>9ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>13ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>5ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iToYear is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iToYear is guarded returning field iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>replaced int return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Rule::getToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>74ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>110ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>211ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>86ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>84ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>44ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>714ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>getToYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testReverseTransitions(org.joda.time.tz.TestBuilder)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>26ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>32ms</time></test><test><name>org.joda.time.tz.TestBuilder.testForwardTransitions(org.joda.time.tz.TestBuilder)</name><time>10ms</time></test><test><name>org.joda.time.tz.TestBuilder.testSerialization(org.joda.time.tz.TestBuilder)</name><time>11ms</time></test><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>7ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>MethodNameMutator_0</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>MethodNameMutator_0</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>MethodNameMutator_0</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>MethodNameMutator_2</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>MethodNameMutator_2</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>MethodNameMutator_2</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>MethodNameMutator_6</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>MethodNameMutator_6</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>MethodNameMutator_6</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>40</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iFromYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>48</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iFromYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>63</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>89</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iToYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>40</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iFromYear is guarded using field iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>48</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iFromYear is guarded using field iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>63</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded using field iRecurrence</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>89</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iToYear is guarded using field iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>40</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iFromYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getFromYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>48</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iFromYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getFromYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>89</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iToYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getFromYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>40</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iFromYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getToYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>48</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iFromYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getToYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>89</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iToYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getToYear()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>40</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iFromYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>48</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iFromYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>89</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Rule.iToYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>22ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.test_DateTime_JustAfterLastEverOverlap(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>40</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iFromYear with an access to iToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>48</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iFromYear with an access to iToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>89</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iToYear with an access to iFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>843</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>3</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getInstanceUTC with a call to getInstance</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>34</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>67</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to next with a call to previous</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>83</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>34</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to set with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>83</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>34</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>83</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to get with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to year with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.Chronology::year()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>34</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.DateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.Chronology::year()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.DateTimeField::set(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>67</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::next(JII)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.Chronology::year()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>83</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.DateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>40</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iFromYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>48</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iFromYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>63</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iRecurrence is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>89</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iToYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to year()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>34</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to year()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to set(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>67</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to next(JII)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to year()Lorg/joda/time/DateTimeField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>83</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to org/joda/time/DateTimeField::set with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>67</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::next with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted -2147483648 with -2147483647</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>8</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/chrono/ISOChronology::getInstanceUTC</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Chronology::year</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/DateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Chronology::year</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/DateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/Chronology::year</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>83</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/DateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>98</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Rule::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>41</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>74</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>90</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>41</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>74</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>90</index><block>8</block><killingTests>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestBuilder.testID(org.joda.time.tz.TestBuilder)</name><time>2ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Rule</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>98</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$Rule::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V</methodDescription><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.21320071635561041</suspValue><description>Removed assignment to member variable iSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>57ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to iNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to iNameKey is guarded using field iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getNameKey()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to iNameKey is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to iNameKey is guarded returning field iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2773500981126146</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getNameKey to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>776</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to iSaveMillis is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>776</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to iSaveMillis is guarded using field iSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>776</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>776</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to iSaveMillis is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>776</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>the access to iSaveMillis is guarded returning field iSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>replaced int return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0409272754535029</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iOfYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iOfYear is guarded using field iOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getOfYear()Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to next with a call to previous</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$OfYear::next(JII)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the access to iOfYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>the call to next(JII)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::next with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$OfYear::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>(JII)J</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::next</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iOfYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iSaveMillis is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iOfYear is guarded using field iOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iSaveMillis is guarded using field iSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getOfYear()Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iOfYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iSaveMillis is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::rename</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>rename</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::rename to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_0</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_0</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_0</mutator><index>12</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.String.intern()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_0</mutator><index>14</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method org.joda.time.tz.DateTimeZoneBuilder$Recurrence.rename(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; is replaced by an instantiation of type org.joda.time.tz.DateTimeZoneBuilder$Recurrence using (Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_4</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_4</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_4</mutator><index>12</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.String.intern()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iNameKey is guarded using field iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::getNameKey()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to intern with a call to toLowerCase</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to rename with a call to renameAppend</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to intern with a call to toUpperCase</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to intern with a call to trim</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to intern with a call to toString</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to java.lang.StringBuilder::append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to java.lang.StringBuilder::append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to java.lang.StringBuilder::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to java.lang.String::intern()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Recurrence::rename(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the access to iNameKey is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to intern()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>the call to rename(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::append</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::append</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::toString</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/String::intern</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::rename</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>15</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced return value with null for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::renameAppend</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$Recurrence::renameAppend to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to java/lang/StringBuilder::append with receiver</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to java/lang/StringBuilder::append with receiver</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to java/lang/String::intern with receiver</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Recurrence</mutatedClass><mutatedMethod>renameAppend</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>14</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>1.0</suspValue><description>replaced call to org/joda/time/tz/DateTimeZoneBuilder$Recurrence::rename with receiver</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to iDayOfMonth is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to iDayOfMonth is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>replaced access to iDayOfMonth with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>replaced access to iDayOfMonth with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>replaced access to iDayOfMonth with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>replaced access to iDayOfMonth with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>replaced access to iDayOfMonth with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>replaced access to iDayOfMonth with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to iDayOfMonth is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>the access to iDayOfMonth is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::dayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024922239313961342</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::dayOfMonth to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to iDayOfWeek is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to iDayOfWeek is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfWeek is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfWeek is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfWeek is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfWeek is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfWeek is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>replaced access to iDayOfWeek with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>replaced access to iDayOfWeek with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>replaced access to iDayOfWeek with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>replaced access to iDayOfWeek with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>replaced access to iDayOfWeek with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>replaced access to iDayOfWeek with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to iDayOfWeek is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>the access to iDayOfWeek is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::dayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfWeek</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03575992699260758</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::dayOfWeek to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to iDays is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to iDays is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::millis()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::seconds()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::minutes()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::hours()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::halfdays()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>replaced access to iDays with an access to iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>replaced access to iDays with an access to iSeconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>replaced access to iDays with an access to iMinutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>replaced access to iDays with an access to iHours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>replaced access to iDays with an access to iHalfdays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>replaced access to iDays with an access to iWeeks</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to iDays is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>the access to iDays is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::days</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.038895492079220696</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::days to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to iMillisOfDay is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to iMillisOfDay is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMillisOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMillisOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMillisOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMillisOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMillisOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>replaced access to iMillisOfDay with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>replaced access to iMillisOfDay with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>replaced access to iMillisOfDay with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>replaced access to iMillisOfDay with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>replaced access to iMillisOfDay with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>0</block><killingTests>org.joda.time.chrono.TestISOChronology.testTimeFields(org.joda.time.chrono.TestISOChronology)</killingTests><suspValue>0.03309516961607476</suspValue><description>replaced access to iMillisOfDay with an access to iHourOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test><test><name>org.joda.time.TestDateTimeFieldType.test_millisOfDay(org.joda.time.TestDateTimeFieldType)</name><time>3ms</time></test><test><name>org.joda.time.chrono.TestISOChronology.testTimeFields(org.joda.time.chrono.TestISOChronology)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to iMillisOfDay is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>the access to iMillisOfDay is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::millisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>millisOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03309516961607476</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::millisOfDay to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to iMonthOfYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to iMonthOfYear is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>replaced access to iMonthOfYear with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>replaced access to iMonthOfYear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>replaced access to iMonthOfYear with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>replaced access to iMonthOfYear with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>replaced access to iMonthOfYear with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>replaced access to iMonthOfYear with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to iMonthOfYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>the access to iMonthOfYear is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::monthOfYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.024723408821707437</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::monthOfYear to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to iMonths is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to iMonths is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::millis()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::seconds()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::minutes()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::hours()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::halfdays()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>replaced access to iMonths with an access to iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>replaced access to iMonths with an access to iSeconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>replaced access to iMonths with an access to iMinutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>replaced access to iMonths with an access to iHours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>replaced access to iMonths with an access to iHalfdays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>replaced access to iMonths with an access to iDays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to iMonths is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>the access to iMonths is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::months</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04038961958610097</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::months to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to iYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to iYear is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>replaced access to iYear with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</killingTests><suspValue>0.025278006958277935</suspValue><description>replaced access to iYear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>replaced access to iYear with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</killingTests><suspValue>0.025278006958277935</suspValue><description>replaced access to iYear with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestAbstractPartial.testGetFieldType(org.joda.time.TestAbstractPartial)</name><time>1ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>replaced access to iYear with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>replaced access to iYear with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to iYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>the access to iYear is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::year</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.025278006958277935</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::year to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to iYears is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to iYears is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::millis()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::seconds()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::minutes()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::hours()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::halfdays()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>replaced access to iYears with an access to iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>replaced access to iYears with an access to iSeconds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>replaced access to iYears with an access to iMinutes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>replaced access to iYears with an access to iHours</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>replaced access to iYears with an access to iHalfdays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>replaced access to iYears with an access to iDays</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to iYears is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>the access to iYears is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::years</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04389512813061471</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::years to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getSaveMillis with a call to getFromYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to getSaveMillis with a call to getToYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getNameKey()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to org.joda.time.tz.DateTimeZoneBuilder$Rule::getSaveMillis()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getNameKey()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to getSaveMillis()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Rule::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to org/joda/time/tz/DateTimeZoneBuilder$Rule::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iMillis</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/tz/DateTimeZoneBuilder$Rule;I)V</methodDescription><lineNumber>894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed assignment to member variable iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iMillis is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iMillis is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>906</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iMillis is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.35355339059327373</suspValue><description>replaced long return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of long value with value + 1 for org/joda/time/tz/DateTimeZoneBuilder$Transition::getMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iNameKey is guarded using field iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iNameKey is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getNameKey()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iNameKey is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iNameKey is guarded returning field iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/tz/DateTimeZoneBuilder$Transition::getNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>mutated return of Object value for org/joda/time/tz/DateTimeZoneBuilder$Transition::getNameKey to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded using field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded using field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iWallOffset with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded returning field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded returning field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced int return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Transition::getSaveMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getSaveMillis</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded using field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iStandardOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iStandardOffset with an access to iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iStandardOffset is guarded returning field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced int return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Transition::getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getStandardOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>77ms</time></test></testsExecutionTime><patchExecutionTime>143ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded using field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced access to iWallOffset with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to iWallOffset is guarded returning field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced int return with 0 for org/joda/time/tz/DateTimeZoneBuilder$Transition::getWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>80ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>getWallOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iWallOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iWallOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>25</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iMillis is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iMillis is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iWallOffset is guarded using field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iWallOffset is guarded using field iWallOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iNameKey is guarded using field iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>25</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iNameKey is guarded using field iNameKey</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>12</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iMillis is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iMillis is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getMillis()J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getWallOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>23</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iNameKey is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getNameKey()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>78ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iNameKey is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getNameKey()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>91ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getStandardOffset()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to field org.joda.time.tz.DateTimeZoneBuilder$Transition.iWallOffset is replaced by the call to org.joda.time.tz.DateTimeZoneBuilder$Transition::getSaveMillis()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iWallOffset with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced access to iWallOffset with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iMillis is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iMillis is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iWallOffset is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iWallOffset is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iNameKey is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>25</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the access to iNameKey is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>8</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced boolean return with false for org/joda/time/tz/DateTimeZoneBuilder$Transition::isTransitionFrom</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>34</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced boolean return with false for org/joda/time/tz/DateTimeZoneBuilder$Transition::isTransitionFrom</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>34</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced boolean return with true for org/joda/time/tz/DateTimeZoneBuilder$Transition::isTransitionFrom</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>89ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>56ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$Transition</mutatedClass><mutatedMethod>isTransitionFrom</mutatedMethod><methodDescription>(Lorg/joda/time/tz/DateTimeZoneBuilder$Transition;)Z</methodDescription><lineNumber>932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.14744195615489714</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>16</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>18</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.14907119849998599</suspValue><description>Removed assignment to member variable iID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01753846236868463</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::getDefault()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01753846236868463</suspValue><description>replaced access to cDefault with an access to UTC</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01753846236868463</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01753846236868463</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::getDefault</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01753846236868463</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01753846236868463</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01753846236868463</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefault to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>the access to iID is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>the access to iID is guarded using field iID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>the access to field org.joda.time.DateTimeZone.iID is replaced by the call to org.joda.time.DateTimeZone::getID()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>the access to field org.joda.time.DateTimeZone.iID is replaced by the call to org.joda.time.DateTimeZone::toString()Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>the access to iID is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>the access to iID is guarded returning field iID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>19</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.042257712736425826</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::getID to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_0</mutator><index>3</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type java.lang.SecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_1</mutator><index>3</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using (Ljava/lang/SecurityManager;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_5</mutator><index>3</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>37</index><block>13</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::setDefault(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>removed call to java/lang/System::getSecurityManager</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01837415911436567</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.052199575097188054</suspValue><description>the access to iTypes is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.052199575097188054</suspValue><description>the access to iTypes is guarded using field iTypes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>628</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.052199575097188054</suspValue><description>the access to iTypes is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.052199575097188054</suspValue><description>replaced return value with null for org/joda/time/PeriodType::getFieldType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.052199575097188054</suspValue><description>mutated return of Object value for org/joda/time/PeriodType::getFieldType to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the access to iIndices is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the access to iIndices is guarded using field iIndices</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the call to org.joda.time.ReadablePeriod::getValue(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the access to iIndices is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the access to iIndices is guarded returning field YEAR_INDEX</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the call to getValue(I)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the call to getValue(I)I is guarded returning field YEAR_INDEX</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>the call to getValue(I)I is guarded returning field MONTH_INDEX</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>replaced call to org/joda/time/ReadablePeriod::getValue with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>removed call to org/joda/time/ReadablePeriod::getValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>replaced int return with 0 for org/joda/time/PeriodType::getIndexedField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>getIndexedField</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;I)I</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>6</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.060522753266880246</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04244763599780089</suspValue><description>the access to iTypes is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04244763599780089</suspValue><description>the access to iTypes is guarded using field iTypes</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>81ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04244763599780089</suspValue><description>the access to iTypes is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04244763599780089</suspValue><description>the access to iTypes is guarded returning field YEAR_INDEX</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04244763599780089</suspValue><description>replaced int return with 0 for org/joda/time/PeriodType::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04244763599780089</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.joda.time.PeriodType.cYMD is replaced by the call to org.joda.time.PeriodType::standard()Lorg/joda/time/PeriodType;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.joda.time.PeriodType.cYMD is replaced by the call to org.joda.time.PeriodType::yearMonthDayTime()Lorg/joda/time/PeriodType;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.joda.time.PeriodType.cYMD is replaced by the call to org.joda.time.PeriodType::yearMonthDay()Lorg/joda/time/PeriodType;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.joda.time.PeriodType.cYMD is replaced by the call to org.joda.time.PeriodType::yearWeekDayTime()Lorg/joda/time/PeriodType;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.joda.time.PeriodType.cYMD is replaced by the call to org.joda.time.PeriodType::yearWeekDay()Lorg/joda/time/PeriodType;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to cYMD with an access to cStandard</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to cYMD with an access to cYMDTime</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to cYMD with an access to cYWDTime</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to cYMD with an access to cYWD</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to cYMD with an access to cYDTime</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to cYMD with an access to cYD</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>71</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return value with null for org/joda/time/PeriodType::yearMonthDay</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PeriodType.java</sourceFile><mutatedClass>org.joda.time.PeriodType</mutatedClass><mutatedMethod>yearMonthDay</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2886751345948129</suspValue><description>mutated return of Object value for org/joda/time/PeriodType::yearMonthDay to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced call to safeAdd with a call to safeMultiply</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced call to set with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>26</index><block>3</block><killingTests>org.joda.time.TestLocalDateTime_Basics.testWithFieldAdded_DurationFieldType_int_1(org.joda.time.TestLocalDateTime_Basics)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced call to set with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.TestLocalDateTime_Basics.testWithFieldAdded_DurationFieldType_int_1(org.joda.time.TestLocalDateTime_Basics)</name><time>12ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>the call to org.joda.time.chrono.BasicYearDateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>the call to org.joda.time.chrono.BasicYearDateTimeField::set(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>the call to set(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>the call to get(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>the call to set(JI)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeAdd with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced call to org/joda/time/chrono/BasicYearDateTimeField::set with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03962144258751637</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>removed call to org/joda/time/chrono/BasicYearDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>removed call to org/joda/time/chrono/BasicYearDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicYearDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>27</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicYearDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03962144258751637</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03962144258751637</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicYearDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0397778642087865</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicYearDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>the access to iChronology is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>the call to getYear(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicYearDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027461751819054487</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearDifference(JJ)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>the call to getYearDifference(JJ)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>the call to getYearDifference(JJ)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getYearDifference with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10976425998969035</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10976425998969035</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicYearDateTimeField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10976425998969035</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10976425998969035</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicYearDateTimeField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to getMinYear with a call to getMinimumDaysInFirstWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to getMaxYear with a call to getMinimumDaysInFirstWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to getMinYear with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>10</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to getMaxYear with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMinYear()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMaxYear()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to org.joda.time.chrono.BasicChronology::setYear(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the access to iChronology is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to getMinYear()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to getMaxYear()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to setYear(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to getMinYear()I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to getMaxYear()I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>the call to setYear(JI)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::setYear with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMinYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMaxYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::setYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>19</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicYearDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicYearDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03363363969981562</suspValue><description>removed call to org/joda/time/field/FieldUtils::verifyValueBounds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded using field iRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded using field iRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getRange()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>32</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getRange()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::getUnitMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>22</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded returning field iRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the access to iRange is guarded returning field iRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the call to getUnitMillis()J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>the call to getUnitMillis()J is guarded returning field iRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>37</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>replaced int return with 0 for org/joda/time/field/PreciseDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026518576139190998</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.08247860988423225</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>the access to iRange is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>the access to iRange is guarded using field iRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getRange()I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>the access to iRange is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>the access to iRange is guarded returning field iRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>replaced int return with 0 for org/joda/time/field/PreciseDateTimeField::getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.028060676663315687</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to getMinimumValue with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to getMaximumValue with a call to getRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced call to getMinimumValue with a call to getRange</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::getMinimumValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::getMaximumValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to getMinimumValue()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to getMaximumValue()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to getMinimumValue()I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to getMaximumValue()I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>16</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>the call to get(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03186264939385831</suspValue><description>removed call to org/joda/time/field/FieldUtils::verifyValueBounds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>46</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>the call to org.joda.time.chrono.GregorianChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>46</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>46</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>46</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>the call to isLeapYear(I)Z is guarded returning field MILLIS_PER_YEAR</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Substituted 365 with 366</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Substituted 719527 with 719528</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>removed call to org/joda/time/chrono/GregorianChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>64</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced long return with 0 for org/joda/time/chrono/GregorianChronology::calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>7</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.13736056394868904</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/GregorianChronology::calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>calculateFirstDayOfYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>50</index><block>8</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getApproxMillisAtEpochDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026967994498529685</suspValue><description>Substituted 31083597720000 with 31083597720001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getApproxMillisAtEpochDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026967994498529685</suspValue><description>replaced long return with 0 for org/joda/time/chrono/GregorianChronology::getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getApproxMillisAtEpochDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>12</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026967994498529685</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/GregorianChronology::getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getAverageMillisPerYearDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026967994498529685</suspValue><description>Substituted 15778476000 with 15778476001</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getAverageMillisPerYearDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026967994498529685</suspValue><description>replaced long return with 0 for org/joda/time/chrono/GregorianChronology::getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getAverageMillisPerYearDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>11</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026967994498529685</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/GregorianChronology::getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMaxYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026726124191242435</suspValue><description>Substituted 292278993 with 292278994</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMaxYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026726124191242435</suspValue><description>replaced int return with 0 for org/joda/time/chrono/GregorianChronology::getMaxYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMaxYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>10</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026726124191242435</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMinYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02673567435205868</suspValue><description>Substituted -292275054 with -292275053</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMinYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02673567435205868</suspValue><description>replaced int return with 0 for org/joda/time/chrono/GregorianChronology::getMinYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMinYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>9</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02673567435205868</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>21</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>replaced boolean return with false for org/joda/time/chrono/GregorianChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>21</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>replaced boolean return with true for org/joda/time/chrono/GregorianChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Substituted 400 with 401</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>4</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02555714898303573</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0335012605086404</suspValue><description>the access to iUnitField is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0335012605086404</suspValue><description>the access to iUnitField is guarded using field iUnitField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0335012605086404</suspValue><description>the access to field org.joda.time.field.PreciseDurationDateTimeField.iUnitField is replaced by the call to org.joda.time.field.PreciseDurationDateTimeField::getDurationField()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0335012605086404</suspValue><description>the access to iUnitField is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0335012605086404</suspValue><description>the access to iUnitField is guarded returning field iUnitField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0335012605086404</suspValue><description>replaced return value with null for org/joda/time/field/PreciseDurationDateTimeField::getDurationField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0335012605086404</suspValue><description>mutated return of Object value for org/joda/time/field/PreciseDurationDateTimeField::getDurationField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getMinimumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02809387802771537</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getMinimumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.02809387802771537</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026207120918047958</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026207120918047958</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026207120918047958</suspValue><description>the access to field org.joda.time.field.PreciseDurationDateTimeField.iUnitMillis is replaced by the call to org.joda.time.field.PreciseDurationDateTimeField::getUnitMillis()J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026207120918047958</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026207120918047958</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026207120918047958</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDurationDateTimeField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.026207120918047958</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDurationDateTimeField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the access to field org.joda.time.field.PreciseDurationDateTimeField.iUnitMillis is replaced by the call to org.joda.time.field.PreciseDurationDateTimeField::getUnitMillis()J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to org.joda.time.field.PreciseDurationDateTimeField::getMinimumValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to org.joda.time.field.PreciseDurationDateTimeField::getMaximumValueForSet(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to org.joda.time.field.PreciseDurationDateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>22</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to getMinimumValue()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to getMaximumValueForSet(JI)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to getMinimumValue()I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to getMaximumValueForSet(JI)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to get(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to getMinimumValue()I is guarded returning field iUnitMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to getMaximumValueForSet(JI)I is guarded returning field iUnitMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>the call to get(J)I is guarded returning field iUnitMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced call to org/joda/time/field/PreciseDurationDateTimeField::getMaximumValueForSet with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>removed call to org/joda/time/field/PreciseDurationDateTimeField::getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>removed call to org/joda/time/field/PreciseDurationDateTimeField::getMaximumValueForSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>removed call to org/joda/time/field/PreciseDurationDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDurationDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDurationDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.033806170189140665</suspValue><description>removed call to org/joda/time/field/FieldUtils::verifyValueBounds</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePeriod;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePartial;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePartial;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePartial;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePeriod;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePeriod;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePartial;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePartial;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePeriod;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePeriod;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePeriod;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to get(Lorg/joda/time/ReadablePeriod;JJ)[I with a call to get(Lorg/joda/time/ReadablePartial;J)[I</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>29</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the access to field org.joda.time.base.BasePeriod.iValues is replaced by the call to org.joda.time.base.BasePeriod::setValues([I)V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to org.joda.time.base.BasePeriod::checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to org.joda.time.Chronology::get(Lorg/joda/time/ReadablePeriod;JJ)[I is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to get(Lorg/joda/time/ReadablePeriod;JJ)[I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to get(Lorg/joda/time/ReadablePeriod;JJ)[I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to get(Lorg/joda/time/ReadablePeriod;JJ)[I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to get(Lorg/joda/time/ReadablePeriod;JJ)[I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to get(Lorg/joda/time/ReadablePeriod;JJ)[I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to org/joda/time/base/BasePeriod::checkPeriodType with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getChronology with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>removed call to org/joda/time/base/BasePeriod::checkPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>removed call to org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>removed call to org/joda/time/Chronology::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>Removed assignment to member variable iType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.16666666666666666</suspValue><description>Removed assignment to member variable iValues</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>checkPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04735137238103784</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getPeriodType with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>checkPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04735137238103784</suspValue><description>removed call to org/joda/time/DateTimeUtils::getPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>checkPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04735137238103784</suspValue><description>replaced return value with null for org/joda/time/base/BasePeriod::checkPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>checkPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04735137238103784</suspValue><description>mutated return of Object value for org/joda/time/base/BasePeriod::checkPeriodType to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>318</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04303314829119352</suspValue><description>the access to iType is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>318</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04303314829119352</suspValue><description>the access to iType is guarded using field iType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>318</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04303314829119352</suspValue><description>the access to field org.joda.time.base.BasePeriod.iType is replaced by the call to org.joda.time.base.BasePeriod::getPeriodType()Lorg/joda/time/PeriodType;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>318</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04303314829119352</suspValue><description>the access to iType is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>318</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04303314829119352</suspValue><description>the access to iType is guarded returning field iType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04303314829119352</suspValue><description>replaced return value with null for org/joda/time/base/BasePeriod::getPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>()Lorg/joda/time/PeriodType;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04303314829119352</suspValue><description>mutated return of Object value for org/joda/time/base/BasePeriod::getPeriodType to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>329</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04410810913912309</suspValue><description>the access to iValues is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>329</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04410810913912309</suspValue><description>the access to iValues is guarded using field iValues</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>329</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04410810913912309</suspValue><description>the access to iValues is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04410810913912309</suspValue><description>replaced int return with 0 for org/joda/time/base/BasePeriod::getValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasePeriod.java</sourceFile><mutatedClass>org.joda.time.base.BasePeriod</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04410810913912309</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>259</lineNumber><mutator>MethodNameMutator_0</mutator><index>31</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to factory method org.joda.time.DurationFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField; is replaced by an instantiation of type org.joda.time.DurationField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>38</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to getDifference with a call to getValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to add with a call to subtract</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.joda.time.ReadablePeriod::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to org.joda.time.ReadablePeriod::getFieldType(I)Lorg/joda/time/DurationFieldType; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to org.joda.time.DurationFieldType::getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>38</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to org.joda.time.DurationField::getDifference(JJ)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to org.joda.time.DurationField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to getFieldType(I)Lorg/joda/time/DurationFieldType; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>38</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to getDifference(JJ)I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>the call to add(JI)J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>replaced call to org/joda/time/DurationField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/joda/time/ReadablePeriod::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>removed call to org/joda/time/ReadablePeriod::getFieldType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>removed call to org/joda/time/DurationFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>removed call to org/joda/time/DurationField::getDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>removed call to org/joda/time/DurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>60</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced return value with null for org/joda/time/chrono/BaseChronology::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>24</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10482848367219183</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BaseChronology</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(Lorg/joda/time/ReadablePeriod;JJ)[I</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10050378152592121</suspValue><description>mutated return of Object value for org/joda/time/chrono/BaseChronology::get to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01853123291652753</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.019896804232983473</suspValue><description>replaced return value with null for org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01853123291652753</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.01853123291652753</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.019896804232983473</suspValue><description>mutated return of Object value for org/joda/time/DateTimeUtils::getChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04719291781830087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>12</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.051031036307982884</suspValue><description>replaced return value with null for org/joda/time/DateTimeUtils::getPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04719291781830087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.04719291781830087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getPeriodType</mutatedMethod><methodDescription>(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>5</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.051031036307982884</suspValue><description>mutated return of Object value for org/joda/time/DateTimeUtils::getPeriodType to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to add with a call to set</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>the call to org.joda.time.field.ImpreciseDateTimeField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>the access to this$0 is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>the access to this$0 is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>the call to add(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>the call to add(JI)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced call to org/joda/time/field/ImpreciseDateTimeField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>removed call to org/joda/time/field/ImpreciseDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced long return with 0 for org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09166984970282113</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to org.joda.time.field.ImpreciseDateTimeField::getDifference(JJ)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to this$0 is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>the call to getDifference(JJ)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed call to org/joda/time/field/ImpreciseDateTimeField::getDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced int return with 0 for org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField::getDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>the access to field org.joda.time.field.PreciseDurationField.iUnitMillis is replaced by the call to org.joda.time.field.PreciseDurationField::getUnitMillis()J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>replaced call to safeAdd with a call to safeSubtract</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>replaced call to safeAdd with a call to safeMultiply</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>13</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeAdd with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03520166719043814</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>the access to field org.joda.time.field.PreciseDurationField.iUnitMillis is replaced by the call to org.joda.time.field.PreciseDurationField::getUnitMillis()J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>replaced call to safeSubtract with a call to safeAdd</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>replaced call to safeSubtract with a call to safeMultiply</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeSubtract with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeSubtract</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDurationField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getDifferenceAsLong</mutatedMethod><methodDescription>(JJ)J</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07088812050083358</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDurationField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to getID with a call to toString</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>the call to org.joda.time.DateTimeZone::getID()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>4ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>4ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>5ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>the call to getID()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>5ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>55ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>removed call to org/joda/time/DateTimeZone::getID</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>Removed assignment to member variable iInfoCache</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>3</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>Removed assignment to member variable iZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>forZone</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>removed call to org/joda/time/tz/CachedDateTimeZone::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>forZone</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1889822365046136</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>forZone</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>17</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced return value with null for org/joda/time/tz/CachedDateTimeZone::forZone</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>forZone</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>forZone</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>forZone</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.19611613513818404</suspValue><description>mutated return of Object value for org/joda/time/tz/CachedDateTimeZone::forZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>the access to iChronology is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>the call to getDayOfMonth(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicDayOfMonthDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.027767067240353285</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDaysInMonthMaxForSet(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>the access to iChronology is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>the call to getDaysInMonthMaxForSet(JI)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDaysInMonthMaxForSet with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDaysInMonthMaxForSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicDayOfMonthDateTimeField::getMaximumValueForSet</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMaximumValueForSet</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03450327796711771</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMinimumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.031341957040361135</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMinimumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.031341957040361135</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicDayOfMonthDateTimeField::getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getMinimumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.031341957040361135</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>the call to factory method org.joda.time.field.BaseDateTimeField.getDurationField()Lorg/joda/time/DurationField; is replaced by an instantiation of type org.joda.time.DurationField using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to add(JI)J with a call to add(JJ)J</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.field.TestOffsetDateTimeField.test_add_long_int(org.joda.time.field.TestOffsetDateTimeField)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to getDurationField with a call to getRangeDurationField</description><testsExecutionTime><test><name>org.joda.time.field.TestBaseDateTimeField.test_roundHalfFloor_long(org.joda.time.field.TestBaseDateTimeField)</name><time>3ms</time></test><test><name>org.joda.time.field.TestBaseDateTimeField.test_roundHalfEven_long(org.joda.time.field.TestBaseDateTimeField)</name><time>3ms</time></test><test><name>org.joda.time.field.TestBaseDateTimeField.test_roundHalfCeiling_long(org.joda.time.field.TestBaseDateTimeField)</name><time>3ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test><test><name>org.joda.time.field.TestBaseDateTimeField.test_roundCeiling_long(org.joda.time.field.TestBaseDateTimeField)</name><time>3ms</time></test><test><name>org.joda.time.field.TestPreciseDurationDateTimeField.test_add_long_int(org.joda.time.field.TestPreciseDurationDateTimeField)</name><time>3ms</time></test><test><name>org.joda.time.field.TestBaseDateTimeField.test_add_long_int(org.joda.time.field.TestBaseDateTimeField)</name><time>4ms</time></test><test><name>org.joda.time.field.TestPreciseDateTimeField.test_add_long_int(org.joda.time.field.TestPreciseDateTimeField)</name><time>4ms</time></test><test><name>org.joda.time.field.TestOffsetDateTimeField.test_add_long_int(org.joda.time.field.TestOffsetDateTimeField)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to add with a call to subtract</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to getDurationField with a call to getLeapDurationField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>the call to org.joda.time.field.BaseDateTimeField::getDurationField()Lorg/joda/time/DurationField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>the call to org.joda.time.DurationField::add(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>the call to getDurationField()Lorg/joda/time/DurationField; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>the call to add(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced call to org/joda/time/DurationField::add with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>removed call to org/joda/time/field/BaseDateTimeField::getDurationField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>removed call to org/joda/time/DurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced long return with 0 for org/joda/time/field/BaseDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.039872611141445</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/BaseDateTimeField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to org.joda.time.Period::getPeriodType()Lorg/joda/time/PeriodType; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to org.joda.time.PeriodType::getIndexedField(Lorg/joda/time/ReadablePeriod;I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to getPeriodType()Lorg/joda/time/PeriodType; is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to getIndexedField(Lorg/joda/time/ReadablePeriod;I)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>70ms</time></test></testsExecutionTime><patchExecutionTime>141ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>replaced call to org/joda/time/PeriodType::getIndexedField with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>removed call to org/joda/time/Period::getPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>removed call to org/joda/time/PeriodType::getIndexedField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>replaced int return with 0 for org/joda/time/Period::getMonths</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getMonths</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to org.joda.time.Period::getPeriodType()Lorg/joda/time/PeriodType; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to org.joda.time.PeriodType::getIndexedField(Lorg/joda/time/ReadablePeriod;I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to getPeriodType()Lorg/joda/time/PeriodType; is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>the call to getIndexedField(Lorg/joda/time/ReadablePeriod;I)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>replaced call to org/joda/time/PeriodType::getIndexedField with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>removed call to org/joda/time/Period::getPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>removed call to org/joda/time/PeriodType::getIndexedField</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>replaced int return with 0 for org/joda/time/Period::getYears</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Period.java</sourceFile><mutatedClass>org.joda.time.Period</mutatedClass><mutatedMethod>getYears</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.09325048082403138</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>the call to org.joda.time.base.AbstractPeriod::getPeriodType()Lorg/joda/time/PeriodType; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>the call to org.joda.time.PeriodType::getFieldType(I)Lorg/joda/time/DurationFieldType; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>the call to getPeriodType()Lorg/joda/time/PeriodType; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>the call to getFieldType(I)Lorg/joda/time/DurationFieldType; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>removed call to org/joda/time/base/AbstractPeriod::getPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>removed call to org/joda/time/PeriodType::getFieldType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>replaced return value with null for org/joda/time/base/AbstractPeriod::getFieldType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>getFieldType</mutatedMethod><methodDescription>(I)Lorg/joda/time/DurationFieldType;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>2</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.054312544659356844</suspValue><description>mutated return of Object value for org/joda/time/base/AbstractPeriod::getFieldType to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>the call to org.joda.time.base.AbstractPeriod::getPeriodType()Lorg/joda/time/PeriodType; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>the call to org.joda.time.PeriodType::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>the call to getPeriodType()Lorg/joda/time/PeriodType; is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>the call to size()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>removed call to org/joda/time/base/AbstractPeriod::getPeriodType</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>removed call to org/joda/time/PeriodType::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced int return with 0 for org/joda/time/base/AbstractPeriod::size</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractPeriod.java</sourceFile><mutatedClass>org.joda.time.base.AbstractPeriod</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.044151078568834795</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.ThreadLocal.get()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.ThreadLocal::get()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Boolean::booleanValue()Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>61ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to get()Ljava/lang/Object; is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>the call to booleanValue()Z is guarded returning default value false</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>103ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>135ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced boolean return with false for org/joda/time/tz/ZoneInfoCompiler::verbose</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced boolean return with true for org/joda/time/tz/ZoneInfoCompiler::verbose</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/ThreadLocal::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Boolean::booleanValue</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testCompile(org.joda.time.tz.TestCompiler)</name><time>215ms</time></test><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>249ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoCompiler.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoCompiler</mutatedClass><mutatedMethod>verbose</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>102ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfWeek(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>the access to iChronology is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>the call to getDayOfWeek(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>replaced int return with 0 for org/joda/time/chrono/GJDayOfWeekDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GJDayOfWeekDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.GJDayOfWeekDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.03843312210120439</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>replaced call to getDifferenceAsLong with a call to add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>the call to org.joda.time.field.ImpreciseDateTimeField::getDifferenceAsLong(JJ)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>the call to getDifferenceAsLong(JJ)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>replaced call to org/joda/time/field/ImpreciseDateTimeField::getDifferenceAsLong with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>removed call to org/joda/time/field/ImpreciseDateTimeField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeToInt</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>replaced int return with 0 for org/joda/time/field/ImpreciseDateTimeField::getDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.10369516947304253</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07071067811865475</suspValue><description>the call to org.joda.time.field.BaseDurationField::getDifferenceAsLong(JJ)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07071067811865475</suspValue><description>the call to getDifferenceAsLong(JJ)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07071067811865475</suspValue><description>replaced call to org/joda/time/field/BaseDurationField::getDifferenceAsLong with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07071067811865475</suspValue><description>removed call to org/joda/time/field/BaseDurationField::getDifferenceAsLong</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07071067811865475</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeToInt</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07071067811865475</suspValue><description>replaced int return with 0 for org/joda/time/field/BaseDurationField::getDifference</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>getDifference</mutatedMethod><methodDescription>(JJ)I</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.07071067811865475</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.037529331252040075</suspValue><description>replaced call to safeAdd with a call to safeSubtract</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.037529331252040075</suspValue><description>replaced call to safeAdd with a call to safeMultiply</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.037529331252040075</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeAdd with argument</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.037529331252040075</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.037529331252040075</suspValue><description>replaced long return with 0 for org/joda/time/field/MillisDurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.037529331252040075</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/MillisDurationField::add</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISOChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ISOChronology</mutatedClass><mutatedMethod>getInstanceUTC</mutatedMethod><methodDescription>()Lorg/joda/time/chrono/ISOChronology;</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0300964632714423</suspValue><description>the access to field org.joda.time.chrono.ISOChronology.INSTANCE_UTC is replaced by the call to org.joda.time.chrono.ISOChronology::getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISOChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ISOChronology</mutatedClass><mutatedMethod>getInstanceUTC</mutatedMethod><methodDescription>()Lorg/joda/time/chrono/ISOChronology;</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>3</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0300964632714423</suspValue><description>the access to field org.joda.time.chrono.ISOChronology.INSTANCE_UTC is replaced by the call to org.joda.time.chrono.ISOChronology::getInstance()Lorg/joda/time/chrono/ISOChronology;</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISOChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ISOChronology</mutatedClass><mutatedMethod>getInstanceUTC</mutatedMethod><methodDescription>()Lorg/joda/time/chrono/ISOChronology;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0300964632714423</suspValue><description>replaced return value with null for org/joda/time/chrono/ISOChronology::getInstanceUTC</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISOChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ISOChronology</mutatedClass><mutatedMethod>getInstanceUTC</mutatedMethod><methodDescription>()Lorg/joda/time/chrono/ISOChronology;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.0300964632714423</suspValue><description>mutated return of Object value for org/joda/time/chrono/ISOChronology::getInstanceUTC to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$DSTZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2182178902359924</suspValue><description>Removed assignment to member variable iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$DSTZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2182178902359924</suspValue><description>Removed assignment to member variable iStartRecurrence</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>75ms</time></test></testsExecutionTime><patchExecutionTime>141ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZoneBuilder.java</sourceFile><mutatedClass>org.joda.time.tz.DateTimeZoneBuilder$DSTZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.2182178902359924</suspValue><description>Removed assignment to member variable iEndRecurrence</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology$YearInfo</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IJ)V</methodDescription><lineNumber>771</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>Removed assignment to member variable iYear</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology$YearInfo</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IJ)V</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</killingTests><suspValue>0.11180339887498948</suspValue><description>Removed assignment to member variable iFirstDayMillis</description><testsExecutionTime><test><name>org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(org.joda.time.tz.TestCompiler)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
</mutations>
