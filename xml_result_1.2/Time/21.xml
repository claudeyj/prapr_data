<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>MethodNameMutator_0</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.DateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>MethodNameMutator_1</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.TestDateTimeZone$MockDateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>MethodNameMutator_2</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.MockZone using (JII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the access to field org.joda.time.DateTimeZone.cProvider is replaced by the call to org.joda.time.DateTimeZone::getProvider()Lorg/joda/time/tz/Provider;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>21</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the access to field org.joda.time.DateTimeZone.cProvider is replaced by the call to org.joda.time.DateTimeZone::getDefaultProvider()Lorg/joda/time/tz/Provider;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to org.joda.time.tz.Provider::getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed call to org/joda/time/tz/Provider::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>32</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12451456127293807</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11867816581938533</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12451456127293807</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::forID to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.02502347051056742</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::getDefault()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.02502347051056742</suspValue><description>replaced access to cDefault with an access to UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.02502347051056742</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.02502347051056742</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::getDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.02502347051056742</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.02502347051056742</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.02502347051056742</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefault to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>MethodNameMutator_0</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>MethodNameMutator_0</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>MethodNameMutator_0</mutator><index>82</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>MethodNameMutator_4</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>MethodNameMutator_4</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>MethodNameMutator_4</mutator><index>82</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>40</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>66</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>40</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>66</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>40</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>66</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>40</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>66</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>40</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>66</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>40</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>66</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>82</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to java.lang.StringBuffer::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed call to java/lang/StringBuffer::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>83</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::printOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>Substituted 43 with 44</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Substituted 3600000 with 3600001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Substituted 3600000 with 3600001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Substituted 58 with 59</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed call to java/lang/StringBuffer::toString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>78</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>78</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::printOffset to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22086305214969307</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>59</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.21566554640687682</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_0</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type java.lang.SecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_1</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using (Ljava/lang/SecurityManager;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>MethodNameMutator_5</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>37</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::setDefault(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>removed call to java/lang/System::getSecurityManager</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.026234161806670223</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>MethodNameMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>MethodNameMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><block>8</block><killingTests/><suspValue>0.0642824346533225</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05887448094094637</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>55</index><block>7</block><killingTests/><suspValue>0.0642824346533225</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06434894520877868</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0642824346533225</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>64</index><block>8</block><killingTests/><suspValue>0.0642824346533225</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>MethodNameMutator_0</mutator><index>18</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to factory method java.util.HashMap.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>MethodNameMutator_0</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to factory method java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>MethodNameMutator_0</mutator><index>197</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to factory method java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to iByLocaleCache is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to iByLocaleCache is guarded using field iByLocaleCache</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.joda.time.tz.DefaultNameProvider.iByLocaleCache is replaced by the call to org.joda.time.tz.DefaultNameProvider::createCache()Ljava/util/HashMap;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>18</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>197</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to java.util.HashMap::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to java.util.Map::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>197</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to java.util.Map::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to iByLocaleCache is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>197</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to java/util/HashMap::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to java/util/Map::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>197</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to java/util/Map::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed call to java/util/HashMap::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed call to java/util/Map::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>197</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed call to java/util/Map::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>200</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return value with null for org/joda/time/tz/DefaultNameProvider::getNameSet</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>46</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>46</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DefaultNameProvider.java</sourceFile><mutatedClass>org.joda.time.tz.DefaultNameProvider</mutatedClass><mutatedMethod>getNameSet</mutatedMethod><methodDescription>(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>200</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>mutated return of Object value for org/joda/time/tz/DefaultNameProvider::getNameSet to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iPeriodStart is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded using field iNextInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded using field iNextInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iPeriodStart is guarded using field iPeriodStart</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded using field iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded using field iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iPeriodStart is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded returning field iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNextInfo is guarded returning field iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iPeriodStart is guarded returning field iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded returning field iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to iNameKey is guarded returning field iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/tz/CachedDateTimeZone$Info::getNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>mutated return of Object value for org/joda/time/tz/CachedDateTimeZone$Info::getNameKey to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iPeriodStart is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded using field iNextInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded using field iNextInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iPeriodStart is guarded using field iPeriodStart</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded using field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>30</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded using field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced access to iOffset with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced access to iOffset with an access to iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iPeriodStart is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded returning field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iNextInfo is guarded returning field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iPeriodStart is guarded returning field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded returning field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>30</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the access to iOffset is guarded returning field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>Substituted -2147483648 with -2147483647</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>31</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced int return with 0 for org/joda/time/tz/CachedDateTimeZone$Info::getOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>11</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>11</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone$Info</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>MethodNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>the call to factory method java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>MethodNameMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to factory method java.lang.ref.SoftReference.get()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>the access to iZoneInfoMap is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>the access to iZoneInfoMap is guarded using field iZoneInfoMap</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>the call to java.util.Map::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1208244186660354</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to java.lang.ref.SoftReference::get()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>the access to iZoneInfoMap is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1208244186660354</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>the call to get()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>replaced call to java/util/Map::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1208244186660354</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>removed call to java/util/Map::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1208244186660354</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed call to java/lang/ref/SoftReference::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>replaced return value with null for org/joda/time/tz/ZoneInfoProvider::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1208244186660354</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11744404390294069</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1208244186660354</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12126781251816648</suspValue><description>mutated return of Object value for org/joda/time/tz/ZoneInfoProvider::getZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>the access to iInfoCache is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>the access to iPeriodStart is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>the access to iInfoCache is guarded using field iInfoCache</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>the access to iPeriodStart is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>the access to iInfoCache is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>the access to iPeriodStart is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>51</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>replaced return value with null for org/joda/time/tz/CachedDateTimeZone::getInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>35</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>35</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getInfo</mutatedMethod><methodDescription>(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03959037912324479</suspValue><description>mutated return of Object value for org/joda/time/tz/CachedDateTimeZone::getInfo to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>MethodNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to factory method org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>MethodNameMutator_4</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to factory method org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to getInfo with a call to createInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to org.joda.time.tz.CachedDateTimeZone::getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to org.joda.time.tz.CachedDateTimeZone$Info::getNameKey(J)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to getNameKey(J)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/tz/CachedDateTimeZone::getNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed call to org/joda/time/tz/CachedDateTimeZone::getInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed call to org/joda/time/tz/CachedDateTimeZone$Info::getNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getNameKey</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2626128657194451</suspValue><description>mutated return of Object value for org/joda/time/tz/CachedDateTimeZone::getNameKey to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced call to getInfo with a call to createInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced call to getOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the call to org.joda.time.tz.CachedDateTimeZone::getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the call to org.joda.time.tz.CachedDateTimeZone$Info::getOffset(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the call to getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the call to getOffset(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the call to getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info; is guarded returning field cInfoCacheMask</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>the call to getOffset(J)I is guarded returning field cInfoCacheMask</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed call to org/joda/time/tz/CachedDateTimeZone::getInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>removed call to org/joda/time/tz/CachedDateTimeZone$Info::getOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced int return with 0 for org/joda/time/tz/CachedDateTimeZone::getOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CachedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.CachedDateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0396370017644709</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testGetShortName_berlin(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
</mutations>
