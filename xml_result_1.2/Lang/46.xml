<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to factory method org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>MethodNameMutator_4</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to factory method org.apache.commons.lang.StringEscapeUtils.escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>access to local str is replaced by access to field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJava(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to org/apache/commons/lang/StringEscapeUtils::escapeJavaStyleString with argument</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJava(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced return value with &#34;&#34; for org/apache/commons/lang/StringEscapeUtils::escapeJava</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to org/apache/commons/lang/StringEscapeUtils::escapeJavaStyleString</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJava</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.5</suspValue><description>mutated return of Object value for org/apache/commons/lang/StringEscapeUtils::escapeJava to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;II)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>182ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write([C)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to write(I)V with a call to write(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local i is replaced by local sz to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local sz is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local i is replaced by local sz to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>182</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local str is replaced by access to field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local str is replaced by access to field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local str is replaced by access to field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_DELIMITER</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>59</index><block>12</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_DELIMITER</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>78</index><block>14</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_DELIMITER</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>97</index><block>16</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_DELIMITER</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>206</index><block>25</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_DELIMITER</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>267</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_DELIMITER</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_QUOTE</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>59</index><block>12</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_QUOTE</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>78</index><block>14</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_QUOTE</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>97</index><block>16</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_QUOTE</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>206</index><block>25</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_QUOTE</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>267</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local ch is replaced by access to field CSV_QUOTE</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to charAt(I)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to write(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.io.Writer::write(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.io.Writer::write(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.io.Writer::write(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><block>12</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>14</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>16</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>271</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>41</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 4095 with 4096</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>12</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 255 with 256</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>14</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 127 with -128</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>16</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>254</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 92 with 93</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>259</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 47 with 48</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>12</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>14</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>16</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>42</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>61</index><block>12</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>80</index><block>14</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>99</index><block>16</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>31</index><block>9</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>42</index><block>10</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>61</index><block>12</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>80</index><block>14</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>99</index><block>16</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>255</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/io/Writer::write</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>260</index><block>29</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/io/Writer::write</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>268</index><block>30</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/io/Writer::write</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>207</index><block>25</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>207</index><block>25</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>207</index><block>25</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>207</index><block>25</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/io/Writer;Ljava/lang/String;Z)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>207</index><block>25</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>MethodNameMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.io.StringWriter.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>MethodNameMutator_4</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.io.StringWriter.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.4472135954999579</suspValue><description>catch type java/io/IOException is replaced with java/lang/Exception</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>5ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local str is replaced by access to field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local str is replaced by access to field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local str is replaced by access to field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.io.StringWriter::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning local str</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning local str</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning field CSV_QUOTE_STR</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/io/StringWriter::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced return value with &#34;&#34; for org/apache/commons/lang/StringEscapeUtils::escapeJavaStyleString</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/io/StringWriter::toString</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>mutated return of Object value for org/apache/commons/lang/StringEscapeUtils::escapeJavaStyleString to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEscapeUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringEscapeUtils</mutatedClass><mutatedMethod>escapeJavaStyleString</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to org/apache/commons/lang/StringEscapeUtils::escapeJavaStyleString</description><testsExecutionTime><test><name>org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(org.apache.commons.lang.StringEscapeUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
</mutations>
