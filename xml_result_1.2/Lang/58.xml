<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>MethodNameMutator_0</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to factory method java.lang.Long.valueOf(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (J)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>MethodNameMutator_4</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to factory method java.lang.Long.valueOf(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf with a call to decode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf with a call to getLong</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>13</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced Long return value with 0L for org/apache/commons/lang/math/NumberUtils::createLong</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>57ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/Long::valueOf</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>77</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>mutated return of Object value for org/apache/commons/lang/math/NumberUtils::createLong to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>MethodNameMutator_0</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>MethodNameMutator_0</mutator><index>222</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>MethodNameMutator_0</mutator><index>238</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (J)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>MethodNameMutator_0</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>MethodNameMutator_0</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>MethodNameMutator_0</mutator><index>260</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>MethodNameMutator_4</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>MethodNameMutator_4</mutator><index>222</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>MethodNameMutator_4</mutator><index>238</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>MethodNameMutator_4</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>MethodNameMutator_4</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>MethodNameMutator_4</mutator><index>260</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>222</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>261</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>255</index><block>31</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>255</index><block>31</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>255</index><block>31</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>255</index><block>31</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>65</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>68</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>155</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>222</index><block>26</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>233</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>261</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>255</index><block>31</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>255</index><block>31</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>185ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>222</index><block>26</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>233</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>255</index><block>31</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>261</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>65</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>68</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>155</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>222</index><block>26</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>233</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>261</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>65</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>68</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>155</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>222</index><block>26</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>233</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>261</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>65</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>68</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>155</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>222</index><block>26</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>233</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>261</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>241</index><block>30</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>catch type java/lang/NumberFormatException is replaced with java/lang/IllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>147</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local decPos is replaced by local expPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>159</index><block>18</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>162</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>163</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>185</index><block>21</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local expPos is replaced by local decPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>188</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>190</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>198</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>201</index><block>22</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>216</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>25</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>220</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>225</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>230</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>237</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>256</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>159</index><block>18</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>162</index><block>19</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>163</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>188</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>190</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>216</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>220</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>225</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>230</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>237</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>256</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>188</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>190</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>216</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>220</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>225</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>230</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>237</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>256</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>216</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local numeric to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>220</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>225</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>230</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>237</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>256</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local numeric to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>228ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>214ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>164</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>191</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>199</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>202</index><block>22</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>223</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigits with a call to isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNotEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>155ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>199</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>202</index><block>22</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>223</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigits with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNotBlank</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlpha</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphaSpace</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphanumeric</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphanumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAsciiPrintable</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNumeric</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isJavaLetter</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isJavaLetter</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>53</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>164</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>191</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>222</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::substring(I)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>227</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>232</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.StringBuffer::append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.StringBuffer::append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>260</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.StringBuffer::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>53</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>164</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>191</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>222</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to substring(I)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>227</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>232</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>260</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><block>15</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><block>18</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>167</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>255</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/StringBuffer::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>261</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/NumberFormatException::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 101 with 102</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 69 with 70</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>76</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>15</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>160</index><block>18</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>165</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>189</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>192</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>204</index><block>23</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>207</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>221</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>226</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>228</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 45 with 46</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>231</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>15</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><block>18</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>200</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>203</index><block>22</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>217</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>229</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>234</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang/StringUtils::isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>155</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Character::isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>164</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>191</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>199</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>202</index><block>22</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>222</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>223</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang/math/NumberUtils::isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>227</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>232</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>233</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Character::isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>238</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang/math/NumberUtils::createLong</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>260</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/StringBuffer::toString</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>240</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return value with null for org/apache/commons/lang/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>36</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>156</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>200</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>203</index><block>22</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>217</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>224</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>229</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>234</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>36</index><block>6</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>156</index><block>17</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>200</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>203</index><block>22</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>217</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>219</index><block>25</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>224</index><block>26</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang.math.NumberUtilsTest)</name><time>9ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>229</index><block>27</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>234</index><block>28</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>77</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>134</index><block>15</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>161</index><block>18</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>167</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>77</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>134</index><block>15</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>161</index><block>18</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>167</index><block>19</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>240</index><block>29</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/lang/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>194</index><block>21</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>222</index><block>26</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>257</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>259</index><block>31</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 4 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 5 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>213</index><block>24</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>69</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>69</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>29</index><block>70</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced boolean return with true for org/apache/commons/lang/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>32</index><block>71</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>69</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>70</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>66</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>69</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>69</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>66</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>25</index><block>69</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>66</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>25</index><block>69</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>68</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>70</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>32</index><block>71</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNotEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNotBlank</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlpha</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlphaSpace</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlphanumeric</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlphanumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAsciiPrintable</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNumeric</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isJavaLetter</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>37</index><block>84</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced boolean return with false for org/apache/commons/lang/math/NumberUtils::isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced boolean return with true for org/apache/commons/lang/math/NumberUtils::isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>79</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>84</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to org/apache/commons/lang/StringUtils::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/Character::isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>25</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>78</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>25</index><block>81</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>80</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>8ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testIsDigits(org.apache.commons.lang.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>84</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local i is replaced by local strLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local strLen is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local i is replaced by local strLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local str is replaced by access to field EMPTY</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local str is replaced by access to field EMPTY</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local strLen is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local str is replaced by access to field EMPTY</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local strLen is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local i is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to isWhitespace with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>33</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced boolean return with true for org/apache/commons/lang/StringUtils::isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><block>10</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to java/lang/Character::isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>8</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>9</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>access to local str is replaced by access to field EMPTY</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>access to local str is replaced by access to field EMPTY</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.StringUtilsTest.testDefaultIfEmpty_StringString(org.apache.commons.lang.StringUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>replaced boolean return with false for org/apache/commons/lang/StringUtils::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang.StringUtilsTest.testDefaultIfEmpty_StringString(org.apache.commons.lang.StringUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>replaced boolean return with true for org/apache/commons/lang/StringUtils::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.lang.StringUtilsTest.testDefaultIfEmpty_StringString(org.apache.commons.lang.StringUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang.StringUtilsTest.testDefaultIfEmpty_StringString(org.apache.commons.lang.StringUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.lang.StringUtilsTest.testDefaultIfEmpty_StringString(org.apache.commons.lang.StringUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang.StringUtilsTest.testDefaultIfEmpty_StringString(org.apache.commons.lang.StringUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang.math.NumberUtilsTest.testLang300(org.apache.commons.lang.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
</mutations>
