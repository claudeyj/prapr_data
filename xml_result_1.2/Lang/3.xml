<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.lang.Float.valueOf(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to factory method java.lang.Float.valueOf(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (F)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>14</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced Float return value with 0 for org/apache/commons/lang3/math/NumberUtils::createFloat</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/Float::valueOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>86</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createFloat to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>MethodNameMutator_0</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>MethodNameMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>MethodNameMutator_0</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>121ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>MethodNameMutator_0</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>593</lineNumber><mutator>MethodNameMutator_0</mutator><index>578</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>MethodNameMutator_4</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>MethodNameMutator_4</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>MethodNameMutator_4</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>MethodNameMutator_4</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>593</lineNumber><mutator>MethodNameMutator_4</mutator><index>578</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (F)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>198ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local arr$ is replaced by local hex_prefixes to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i$ is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local len$ is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local arr$ is replaced by local hex_prefixes to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i$ is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local str is replaced by local pfx to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>79</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local pfx is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local decPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>175</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>181</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local decPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>183</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>206</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local decPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>209</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local decPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>226</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>228</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local decPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>233</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>235</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local numDecimals is replaced by local pfxLen to be defined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>500</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>503</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>504</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>511</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>512</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local pfxLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>515</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>529</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>531</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local exp is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>561</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local mant is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>564</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local exp is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>577</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>70</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local len$ is replaced by local i$ to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>73</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>175</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>181</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>183</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>206</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>209</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>218</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>228</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>233</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>235</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local numDecimals is replaced by local decPos to be defined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>500</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>503</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>504</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>511</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>512</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>515</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>529</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>531</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local exp is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>561</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local mant is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>564</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local exp is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>577</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local decPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>175</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>181</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local decPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>183</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local expPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>206</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local decPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>209</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>218</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local decPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>228</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local decPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>235</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local numDecimals is replaced by local expPos to be defined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>500</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>503</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>512</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local expPos is replaced by local numDecimals to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>529</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local dec is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>531</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local exp is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>561</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local mant is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>564</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local exp is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>577</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>582</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>585</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>595</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>595</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>582</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>585</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>595</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>595</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>582</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>585</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>595</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>595</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>141</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>234</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>505</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>516</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>562</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>565</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>583</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isNotEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>562</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>565</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isNotBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to containsWhitespace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isAlpha</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isAlphaSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isAlphanumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isAlphanumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isAsciiPrintable</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to isBlank with a call to isNumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to isDigit with a call to isJavaLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>141</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>144</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::substring(I)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>234</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>505</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>516</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>583</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.Float::isInfinite()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>586</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to java.lang.Float::floatValue()F is guarded using default value 0.F</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>141</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>144</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to substring(I)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>234</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>505</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>516</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>583</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to isInfinite()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>586</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the call to floatValue()F is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>172</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>177</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>186</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>502</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>508</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>149</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 101 with 102</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>158</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 69 with 70</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>161</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>166</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>171</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>176</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>207</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>219</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>227</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>290</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>501</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>506</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>513</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>567</index><block>63</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>571</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>587</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>507</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>514</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>177</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>288</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>291</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>502</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>508</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>530</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>532</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>563</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>566</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>584</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>589</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>591</index><block>66</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/lang3/StringUtils::isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>141</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>144</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>150</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>156</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>159</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>185</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>234</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>287</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/Character::isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>505</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>516</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>562</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>565</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>578</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createFloat</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>583</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/Float::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>586</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/lang/Float::floatValue</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>597</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>81</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>288</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>291</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>530</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>532</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>563</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>566</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>584</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>589</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>591</index><block>66</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>81</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>288</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>291</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>530</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>532</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>563</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>566</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>584</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>589</index><block>65</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>591</index><block>66</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>71</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>101</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>172</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>177</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>182</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>186</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>502</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>508</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>71</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>101</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>172</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>177</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>182</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>186</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>502</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>508</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>597</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>210</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>221</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>229</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>517</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>625</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>625</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>31</index><block>79</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced boolean return with true for org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>80</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>79</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>77</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>79</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>35</index><block>80</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>local i is replaced by local strLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>local strLen is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>local i is replaced by local strLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local i is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local strLen is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local i is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local i is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local strLen is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to local i is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to isWhitespace with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to java.lang.CharSequence::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to java.lang.CharSequence::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>36</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced boolean return with true for org/apache/commons/lang3/StringUtils::isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to java/lang/CharSequence::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/lang/CharSequence::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/lang/Character::isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>159ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
</mutations>
