<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/math/BigInteger;ILjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/math/BigInteger;ILjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/math/BigInteger;ILjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/math/BigInteger;ILjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(JLjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(JLjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(JLjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(JLjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/math/BigInteger;ILjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/math/BigInteger;ILjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(JLjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(JLjava/math/MathContext;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNotEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNotBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlpha</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphaSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphanumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphanumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAsciiPrintable</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>28</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/math/BigDecimal::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>91</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang3/StringUtils::isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>29</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createBigDecimal</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>91</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>91</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>93</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigDecimal</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigDecimal;</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>95</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createBigDecimal to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(IILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(IILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(IILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(IILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(IILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(IILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/math/BigInteger::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>88</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>16</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createBigInteger</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>88</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>88</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createBigInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/math/BigInteger;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>90</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createBigInteger to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(Ljava/lang/String;)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Double.valueOf(Ljava/lang/String;)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Double; with a call to valueOf(D)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Double; with a call to valueOf(D)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Double; with a call to valueOf(D)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Double; with a call to valueOf(D)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Double; with a call to valueOf(D)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Double; with a call to valueOf(D)Ljava/lang/Double;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>14</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced Double return value with 0 for org/apache/commons/lang3/math/NumberUtils::createDouble</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Double::valueOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createDouble</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Double;</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>81</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createDouble to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Float.valueOf(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Float.valueOf(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (F)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Float; with a call to valueOf(F)Ljava/lang/Float;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>14</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced Float return value with 0 for org/apache/commons/lang3/math/NumberUtils::createFloat</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Float::valueOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createFloat</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Float;</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>78</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createFloat to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>669</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Integer.decode(Ljava/lang/String;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>669</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.Integer.decode(Ljava/lang/String;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>669</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to decode with a call to valueOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>669</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to decode with a call to getInteger</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>175ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>14</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced Integer return value with 0 for org/apache/commons/lang3/math/NumberUtils::createInteger</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>82</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Integer::decode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>82</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>82</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createInteger</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Integer;</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>84</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createInteger to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to factory method java.lang.Long.valueOf(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (J)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to factory method java.lang.Long.valueOf(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf(Ljava/lang/String;)Ljava/lang/Long; with a call to valueOf(J)Ljava/lang/Long;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf with a call to decode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to valueOf with a call to getLong</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>14</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced Long return value with 0L for org/apache/commons/lang3/math/NumberUtils::createLong</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>85</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/Long::valueOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>85</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>85</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createLong</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Long;</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>87</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createLong to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>467</lineNumber><mutator>MethodNameMutator_0</mutator><index>48</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>MethodNameMutator_0</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>MethodNameMutator_0</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>MethodNameMutator_0</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>190ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>MethodNameMutator_0</mutator><index>149</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>MethodNameMutator_0</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>MethodNameMutator_0</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>MethodNameMutator_0</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>MethodNameMutator_0</mutator><index>259</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (J)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>MethodNameMutator_0</mutator><index>269</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger; is replaced by an instantiation of type java.math.BigInteger using (ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>522</lineNumber><mutator>MethodNameMutator_0</mutator><index>290</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>191ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>536</lineNumber><mutator>MethodNameMutator_0</mutator><index>322</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>MethodNameMutator_0</mutator><index>355</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal; is replaced by an instantiation of type java.math.BigDecimal using ([CII)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>MethodNameMutator_0</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>MethodNameMutator_0</mutator><index>416</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>MethodNameMutator_0</mutator><index>426</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (J)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>MethodNameMutator_0</mutator><index>436</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger; is replaced by an instantiation of type java.math.BigInteger using (ILjava/util/Random;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>579</lineNumber><mutator>MethodNameMutator_0</mutator><index>458</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>587</lineNumber><mutator>MethodNameMutator_0</mutator><index>490</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>467</lineNumber><mutator>MethodNameMutator_4</mutator><index>48</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>MethodNameMutator_4</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>MethodNameMutator_4</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>MethodNameMutator_4</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>MethodNameMutator_4</mutator><index>149</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>MethodNameMutator_4</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>MethodNameMutator_4</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>MethodNameMutator_4</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method java.lang.String.substring(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>MethodNameMutator_4</mutator><index>259</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>MethodNameMutator_4</mutator><index>269</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger; is replaced by an instantiation of type java.math.BigInteger using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>522</lineNumber><mutator>MethodNameMutator_4</mutator><index>290</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (F)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>536</lineNumber><mutator>MethodNameMutator_4</mutator><index>322</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>MethodNameMutator_4</mutator><index>355</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal; is replaced by an instantiation of type java.math.BigDecimal using (D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>140ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>MethodNameMutator_4</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method java.lang.String.substring(II)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>MethodNameMutator_4</mutator><index>416</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>MethodNameMutator_4</mutator><index>426</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long; is replaced by an instantiation of type java.lang.Long using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>MethodNameMutator_4</mutator><index>436</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger; is replaced by an instantiation of type java.math.BigInteger using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>579</lineNumber><mutator>MethodNameMutator_4</mutator><index>458</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float; is replaced by an instantiation of type java.lang.Float using (F)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>587</lineNumber><mutator>MethodNameMutator_4</mutator><index>490</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to factory method org.apache.commons.lang3.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double; is replaced by an instantiation of type java.lang.Double using (D)V</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>350ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>182ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>262ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>260ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>73</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>226ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>167</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>247</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>229ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>317ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;I)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>147ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>126</index><block>14</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>247</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>73</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>140ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>167</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>247</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>73</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>167</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>205ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>247</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>194ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>70</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>73</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(II)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>167</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>142ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>247</index><block>28</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>replaced call to substring(I)Ljava/lang/String; with a call to substring(II)Ljava/lang/String;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to substring(II)Ljava/lang/String; with a call to substring(I)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf(I)I with a call to indexOf(Ljava/lang/String;)I</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>262</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>catch type java/lang/NumberFormatException is replaced with java/lang/IllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>531</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_1</mutator><index>314</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>catch type java/lang/NumberFormatException is replaced with java/lang/IllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>542</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_2</mutator><index>347</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>catch type java/lang/NumberFormatException is replaced with java/lang/IllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_3</mutator><index>358</index><block>44</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>catch type java/lang/NumberFormatException is replaced with java/lang/IllegalArgumentException</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>131</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>135</index><block>14</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local decPos is replaced by local expPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>150</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local decPos is replaced by local expPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>491</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>17</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local decPos is replaced by local expPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>174</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>185</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>186</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>189</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>194</index><block>21</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local expPos is replaced by local decPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>499</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>201</index><block>22</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local expPos is replaced by local decPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>205</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>207</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>215</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>23</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>238</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>240</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>245</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>252</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>258</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>268</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>289</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>321</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>354</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>380</index><block>45</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>383</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>384</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>391</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>392</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>395</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>398</index><block>47</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local expPos is replaced by local decPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>559</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>405</index><block>48</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local expPos is replaced by local decPos to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>409</index><block>48</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local exp is replaced by local str to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>411</index><block>49</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>415</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>425</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>435</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>441</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local decPos is replaced by local expPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>444</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local expPos is replaced by local decPos to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>579</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>457</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>489</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>174</index><block>19</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>177</index><block>20</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>185</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>186</index><block>21</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>189</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>205</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>207</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>240</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>245</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>252</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>258</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>268</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>289</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>321</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>354</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>380</index><block>45</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>383</index><block>46</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>384</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>391</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>392</index><block>47</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>local dec is replaced by local mant to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>395</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>409</index><block>48</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local exp is replaced by local mant to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>415</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>425</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>435</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>579</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>457</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>489</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>205</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>207</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>240</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>245</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>252</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>258</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>268</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>289</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>321</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>354</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>409</index><block>48</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local exp is replaced by local dec to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>415</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>425</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>435</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>579</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>457</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>489</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local str is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>236</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local exp is replaced by local numeric to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>240</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>245</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>252</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>258</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>268</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>289</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>321</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>354</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>local numeric is replaced by local exp to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>294</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>297</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>307</index><block>36</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>326</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>329</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>340</index><block>41</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>465</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>475</index><block>59</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>494</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>497</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>507</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local d is replaced by access to field DOUBLE_ZERO</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>294</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>297</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>307</index><block>36</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>326</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>329</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>340</index><block>41</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>465</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>475</index><block>59</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>494</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>497</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>507</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local d is replaced by access to field DOUBLE_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>294</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>297</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>307</index><block>36</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>326</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>329</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>538</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>340</index><block>41</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>462</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>465</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>475</index><block>59</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local f is replaced by access to field FLOAT_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>494</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>497</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local d is replaced by access to field DOUBLE_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>589</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>507</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>access to local d is replaced by access to field DOUBLE_MINUS_ONE</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>55</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>179</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>190</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>137ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>208</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>128ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>216</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>219</index><block>23</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>248</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigits with a call to isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>253</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigits with a call to isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>295</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>327</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>385</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>396</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>314ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>442</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>445</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isAllZeros with a call to isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>463</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>495</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNotEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to codePointBefore</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>216</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>219</index><block>23</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>248</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigits with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>253</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigits with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>442</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>445</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isAllZeros with a call to isNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNotBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to indexOf with a call to lastIndexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlpha</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphaSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphanumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAlphanumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isAsciiPrintable</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isBlank with a call to isNumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to isDigit with a call to isJavaLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>55</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>58</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::indexOf(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::substring(I)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>149</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>179</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>190</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>208</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>242</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::substring(I)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>295</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Float::isInfinite()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>298</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Float::floatValue()F is guarded using default value 0.F</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>327</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Double::isInfinite()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>330</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Double::floatValue()F is guarded using default value 0.F</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>385</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>396</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.String::substring(II)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>463</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Float::isInfinite()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>466</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Float::floatValue()F is guarded using default value 0.F</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>495</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Double::isInfinite()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>498</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.lang.Double::doubleValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>55</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>58</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to indexOf(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to substring(I)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>149</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>179</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>190</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>208</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>242</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to charAt(I)C is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to substring(I)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>295</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to isInfinite()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>298</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to floatValue()F is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>327</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to isInfinite()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>330</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to floatValue()F is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>385</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>396</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to length()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to substring(II)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>463</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to isInfinite()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>466</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to floatValue()F is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>495</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to isInfinite()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>498</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to doubleValue()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::indexOf with argument</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><block>11</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>176</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>382</index><block>45</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>388</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>Substituted 101 with 102</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 69 with 70</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>9</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>132</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>147</index><block>16</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>170</index><block>18</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 46 with 47</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>175</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>187</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>191</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>206</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>209</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>221</index><block>24</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>225</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>241</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>64ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>243</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 45 with 46</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>246</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>299</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>332</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>381</index><block>45</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>386</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>393</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>447</index><block>55</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>451</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>467</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>499</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>394</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>11</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><block>18</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>217</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>237</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>249</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>254</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>296</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>301</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>303</index><block>35</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>328</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>334</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>336</index><block>40</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>382</index><block>45</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>388</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>410</index><block>48</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>412</index><block>49</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>443</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>446</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>464</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>469</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>471</index><block>58</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>496</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>501</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>503</index><block>63</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang3/StringUtils::isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createInteger</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::indexOf</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>167</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Character::isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>179</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>190</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>208</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>216</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>219</index><block>23</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>242</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>248</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>253</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>259</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createLong</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>269</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createBigInteger</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>290</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createFloat</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>295</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Float::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>298</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Float::floatValue</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>322</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createDouble</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>327</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>330</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Double::floatValue</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>355</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createBigDecimal</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>385</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>396</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/String::substring</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>416</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createInteger</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>426</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createLong</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>436</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createBigInteger</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>442</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>445</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>458</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createFloat</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>463</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Float::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>466</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Float::floatValue</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>490</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/lang3/math/NumberUtils::createDouble</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>495</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>498</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/Double::doubleValue</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>261</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>270</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>309</index><block>36</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>342</index><block>41</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>357</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>418</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>437</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>477</index><block>59</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>509</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>replaced return value with null for org/apache/commons/lang3/math/NumberUtils::createNumber</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>168</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>171</index><block>18</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>217</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>237</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>244</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>249</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>254</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>296</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>301</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>303</index><block>35</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>328</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>334</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>336</index><block>40</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>410</index><block>48</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>412</index><block>49</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>443</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>446</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>464</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>469</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>471</index><block>58</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>496</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>501</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>503</index><block>63</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>168</index><block>17</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>171</index><block>18</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>217</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>220</index><block>23</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>237</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>239</index><block>26</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>244</index><block>27</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>249</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>254</index><block>29</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>296</index><block>33</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>301</index><block>34</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>303</index><block>35</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>328</index><block>38</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>334</index><block>39</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>336</index><block>40</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>410</index><block>48</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>412</index><block>49</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>443</index><block>53</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>446</index><block>54</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>464</index><block>56</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>469</index><block>57</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>471</index><block>58</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>496</index><block>61</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>501</index><block>62</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>503</index><block>63</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>82</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>92</index><block>11</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>143</index><block>15</block><killingTests/><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testLang300(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>176</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>182</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>382</index><block>45</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>388</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>82</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>92</index><block>11</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>143</index><block>15</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>176</index><block>19</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>182</index><block>20</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>382</index><block>45</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>388</index><block>46</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>261</index><block>30</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>270</index><block>31</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>309</index><block>36</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>342</index><block>41</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>357</index><block>43</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>418</index><block>50</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>428</index><block>51</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>437</index><block>52</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>477</index><block>59</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>509</index><block>64</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>1.0</suspValue><description>mutated return of Object value for org/apache/commons/lang3/math/NumberUtils::createNumber to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>126</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>134</index><block>14</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>149</index><block>16</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>193</index><block>21</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>211</index><block>22</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>397</index><block>47</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to java/lang/String::substring with receiver</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 4 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>RemoveSwitch 5 mutation</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>createNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/Number;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>232</index><block>25</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>70</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>70</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>31</index><block>71</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced boolean return with true for org/apache/commons/lang3/math/NumberUtils::isAllZeros</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>72</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>70</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>71</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>70</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>70</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>70</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>67</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>70</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>69</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>71</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isAllZeros</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>35</index><block>72</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit(C)Z with a call to isDigit(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNotEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNotBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlpha</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlphaSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlphanumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAlphanumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isAsciiPrintable</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNumeric</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isEmpty with a call to isNumericSpace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced call to isDigit with a call to isJavaLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>19</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>41</index><block>102</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced boolean return with false for org/apache/commons/lang3/math/NumberUtils::isDigits</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>102</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to org/apache/commons/lang3/StringUtils::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed call to java/lang/Character::isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>96</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>99</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>98</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NumberUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.math.NumberUtils</mutatedClass><mutatedMethod>isDigits</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>102</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.5</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace(C)Z with a call to isWhitespace(I)Z</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>local i is replaced by local strLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>local strLen is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>local i is replaced by local strLen to be used</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>access to local i is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>access to local strLen is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>access to local i is replaced by access to field INDEX_NOT_FOUND</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>access to local i is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>access to local strLen is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>access to local i is replaced by access to field PAD_LIMIT</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isHighSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isLowSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isSurrogate</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isLowerCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isUpperCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isTitleCase</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isDefined</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isLetter</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>replaced call to isWhitespace with a call to isLetterOrDigit</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to java.lang.CharSequence::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>the call to java.lang.CharSequence::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>the call to charAt(I)C is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced boolean return with true for org/apache/commons/lang3/StringUtils::isBlank</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>10</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to java/lang/CharSequence::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>removed call to java/lang/CharSequence::charAt</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>removed call to java/lang/Character::isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>5</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>8</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.23570226039551587</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isBlank</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>the call to java.lang.CharSequence::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>the call to length()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>replaced boolean return with false for org/apache/commons/lang3/StringUtils::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>replaced boolean return with true for org/apache/commons/lang3/StringUtils::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>removed call to java/lang/CharSequence::length</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.StringUtils</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.1</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the access to field org.apache.commons.lang3.SystemUtils.JAVA_VERSION_FLOAT is replaced by the call to org.apache.commons.lang3.SystemUtils::getJavaVersionAsFloat()F</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>access to field JAVA_VERSION_FLOAT is replaced by access to local requiredVersion</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>access to local requiredVersion is replaced by access to field JAVA_VERSION_FLOAT</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced boolean return with false for org/apache/commons/lang3/SystemUtils::isJavaVersionAtLeast</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced boolean return with true for org/apache/commons/lang3/SystemUtils::isJavaVersionAtLeast</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SystemUtils.java</sourceFile><mutatedClass>org.apache.commons.lang3.SystemUtils</mutatedClass><mutatedMethod>isJavaVersionAtLeast</mutatedMethod><methodDescription>(F)Z</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(org.apache.commons.lang3.math.NumberUtilsTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
</mutations>
