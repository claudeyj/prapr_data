//TODO generate to different dir, disable vanilla javadoc task
task mockitoJavadoc(type: Javadoc) {
    description "Creates javadoc html for Mockito API."
    // For more details on the format
    // see https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html

    classpath = configurations.runtime + configurations.provided
    source = sourceSets.main.allJava
    destinationDir = file("$buildDir/javadoc")
    title = "Mockito ${project.version} API"

    options.docTitle = """<h1><a href="org/mockito/Mockito.html">Click to see examples</a>. Mockito ${project.version} API.</h1>"""
    options.windowTitle = "Mockito ${project.version} API"
    options.group("Main package", ["org.mockito"])
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
    options.docEncoding = 'UTF-8'
    options.use = true
    options.splitIndex = true
    options.noDeprecated = false
    options.noDeprecatedList = false
    options.noIndex = false
    options.noNavBar = false
    options.noTree = false
//    options.stylesheetFile file("src/javadoc/stylesheet.css")
    options.links('http://docs.oracle.com/javase/8/docs/api/')
//    options.top = '<some mockito html>'

    options.header("""
<em id="mockito-version-header-javadoc7"><strong>Mockito ${project.version} API</strong></em>

<!-- using the beautify plugin for jQuery from https://bitbucket.org/larscorneliussen/beautyofcode/ -->
<script type="text/javascript">
  var shBaseURL = "{@docRoot}/js/sh-2.1.382/";
</script>
<script type="text/javascript" src="{@docRoot}/js/jquery-1.7.min.js"></script>
<script type="text/javascript" src="{@docRoot}/js/jquery.beautyOfCode-min.js"></script>

<script type="text/javascript">
  /* Apply beautification of code */
  var usingOldIE = false;
  if(\$.browser.msie && parseInt(\$.browser.version) < 9) usingOldIE = true;

  if(!usingOldIE) {
      \$.beautyOfCode.init({
        theme : "Eclipse",
        brushes: ["Java"]
      });

      var version = "${project.version}";

      jQuery.fn.removeAttributes = function() {
        return this.each(function() {
          var attributes = \$.map(this.attributes, function(item) {
            return item.name;
          });
          var img = \$(this);
          \$.each(attributes, function(i, item) {
            img.removeAttr(item);
          });
        });
      };

      \$(function() {
        /* Add name & version to header for Javadoc 1.6 */
        \$("td.NavBarCell1[colspan=2]").each(function(index, element) {
          var jqueryTD = \$(element);
          jqueryTD.after(
            \$("<td><em><strong>Mockito ${project.version} API</strong></em></td>").attr("class","NavBarCell1").attr("id","mockito-version-header-javadoc6")
          );
          jqueryTD.removeAttr("colspan");
        });
        /* Cleans up mess with Javadoc 1.7 */
        \$("body > h1").removeAttributes().attr("class", "bar").attr("title", "Mockito ${project.version} API");
        /* Cleans up mess with Javadoc 1.7 with Javadoc 1.6 */
        \$("td em#mockito-version-header-javadoc7").remove();
      });
  }
</script>
""")
    options.bottom = 'Mockito, MIT License'
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    doLast {
        copy {
            from "javadoc"
            into "$buildDir/javadoc"
        }
    }
}
