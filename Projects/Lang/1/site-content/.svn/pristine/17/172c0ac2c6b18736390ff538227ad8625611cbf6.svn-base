<!DOCTYPE html>
<!--
 | Generated by Apache Maven Doxia at 07 April 2020
 | Rendered using Apache Maven Fluido Skin 1.3.0
-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <meta name="author" content="Commons Documentation Team" />
                <meta name="Date-Revision-yyyymmdd" content="20200407" />
            <meta http-equiv="Content-Language" content="en" />
        <title>Lang &#x2013; What's new in Commons Lang 2.4?</title>

    <link rel="stylesheet" href="./css/bootstrap.min.css" type="text/css" />
    <link rel="stylesheet" href="./css/site.css" type="text/css" />
    <link rel="stylesheet" href="./css/print.css" media="print" />

    <script type="text/javascript" src="./js/jquery.min.js"></script>
    <script type="text/javascript" src="./js/bootstrap.min.js"></script>
    <script type="text/javascript" src="./js/prettify.min.js"></script>
    <script type="text/javascript" src="./js/site.js"></script>

    
      </head>

  <body class="composite">
                      <a href="https://commons.apache.org/" id="bannerLeft" title="Apache Commons logo">
                                                                    <img class="logo-left" src="      ./images/commons-logo.png
"  alt="Apache Commons logo"/>
              </a>
                                          <a href="index.html" id="bannerRight">
                                                                          <img class="logo-right" src="    images/logo.png
"  alt="Commons Lang"/>
              </a>
          <div class="clear"></div>

    <div class="navbar">
      <div class="navbar-inner">
        <div class="container-fluid">
          <a class="brand" href="https://commons.apache.org/proper/commons-lang/">Apache Commons Lang &trade;</a>
          <ul class="nav">      
                    
          <li id="publishDate">Last Published: 07 April 2020</li>
    <li class="divider">|</li> <li id="projectVersion">Version: 3.10</li>
  </ul>
          <div class="pull-right">  <ul class="nav">
            <li>
                  <a href="http://www.apachecon.com/" class="externalLink" title="ApacheCon">
    ApacheCon</a>
      </li>
          <li>
                  <a href="http://www.apache.org" class="externalLink" title="Apache">
    Apache</a>
      </li>
          <li>
                  <a href="../../" title="Commons">
    Commons</a>
      </li>
    </ul>
</div>
        </div>
      </div>
    </div>

    <div class="container-fluid">
      <table class="layout-table">
        <tr>
          <td class="sidebar">
            <div class="well sidebar-nav">
                    <ul class="nav nav-list">
                           <li class="nav-header">Lang</li>
                                        <li class="none">
                  <a href="index.html" title="Overview">
    Overview</a>
          </li>
                             <li class="none">
                  <a href="download_lang.cgi" title="Download">
    Download</a>
          </li>
                             <li class="none">
                  <a href="userguide.html" title="Users guide">
    Users guide</a>
          </li>
                             <li class="none">
                  <a href="release-history.html" title="Release History">
    Release History</a>
          </li>
                             <li class="none">
                  <a href="javadocs/api-release/index.html" title="Javadoc (Latest release)">
    Javadoc (Latest release)</a>
          </li>
                 </ul>
      <ul class="nav nav-list">
                                 <li class="nav-header"><i class="icon-cog"></i>Development</li>
                                        <li class="none">
                  <a href="building.html" title="Building">
    Building</a>
          </li>
                             <li class="none">
                  <a href="mail-lists.html" title="Mailing Lists">
    Mailing Lists</a>
          </li>
                             <li class="none">
                  <a href="issue-tracking.html" title="Issue Tracking">
    Issue Tracking</a>
          </li>
                             <li class="none">
                  <a href="proposal.html" title="Proposal">
    Proposal</a>
          </li>
                             <li class="none">
                  <a href="developerguide.html" title="Developer guide">
    Developer guide</a>
          </li>
                             <li class="none">
                  <a href="scm.html" title="Source Repository">
    Source Repository</a>
          </li>
                             <li class="none">
                  <a href="apidocs/index.html" title="Javadoc (GIT latest)">
    Javadoc (GIT latest)</a>
          </li>
                 </ul>
      <ul class="nav nav-list">
                                 <li class="nav-header"><i class="icon-info-sign"></i>Project Documentation</li>
                                                                                                                                                                                                                                                                              <li class="collapsed">
                  <a href="project-info.html" title="Project Information">
    Project Information</a>
                    </li>
                                                                                                                                                                                                                                                                                                                                                             <li class="collapsed">
                  <a href="project-reports.html" title="Project Reports">
    Project Reports</a>
                    </li>
                 </ul>
      <ul class="nav nav-list">
                           <li class="nav-header">Commons</li>
                                        <li class="none">
                  <a href="../../" title="Home">
    Home</a>
          </li>
                             <li class="none">
                  <a href="http://www.apache.org/licenses/" class="externalLink" title="License">
    License</a>
          </li>
                                                                               <li class="collapsed">
                  <a href="../../components.html" title="Components">
    Components</a>
                    </li>
                                                                               <li class="collapsed">
                  <a href="../../sandbox/index.html" title="Sandbox">
    Sandbox</a>
                    </li>
                                                                               <li class="collapsed">
                  <a href="../../dormant/index.html" title="Dormant">
    Dormant</a>
                    </li>
                 </ul>
      <ul class="nav nav-list">
                           <li class="nav-header">General Information</li>
                                        <li class="none">
                  <a href="../../security.html" title="Security">
    Security</a>
          </li>
                             <li class="none">
                  <a href="../../volunteering.html" title="Volunteering">
    Volunteering</a>
          </li>
                             <li class="none">
                  <a href="../../patches.html" title="Contributing Patches">
    Contributing Patches</a>
          </li>
                             <li class="none">
                  <a href="../../building.html" title="Building Components">
    Building Components</a>
          </li>
                             <li class="none">
                  <a href="../../commons-parent-pom.html" title="Commons Parent Pom">
    Commons Parent Pom</a>
          </li>
                             <li class="none">
                  <a href="../../build-plugin/index.html" title="Commons Build Plugin">
    Commons Build Plugin</a>
          </li>
                             <li class="none">
                  <a href="../../releases/index.html" title="Releasing Components">
    Releasing Components</a>
          </li>
                             <li class="none">
                  <a href="http://wiki.apache.org/commons/FrontPage" class="externalLink" title="Wiki">
    Wiki</a>
          </li>
                 </ul>
      <ul class="nav nav-list">
                           <li class="nav-header">ASF</li>
                                        <li class="none">
                  <a href="http://www.apache.org/foundation/how-it-works.html" class="externalLink" title="How the ASF works">
    How the ASF works</a>
          </li>
                             <li class="none">
                  <a href="http://www.apache.org/foundation/getinvolved.html" class="externalLink" title="Get Involved">
    Get Involved</a>
          </li>
                             <li class="none">
                  <a href="http://www.apache.org/dev/" class="externalLink" title="Developer Resources">
    Developer Resources</a>
          </li>
                             <li class="none">
                  <a href="http://www.apache.org/foundation/policies/conduct.html" class="externalLink" title="Code of Conduct">
    Code of Conduct</a>
          </li>
                             <li class="none">
                  <a href="http://www.apache.org/foundation/sponsorship.html" class="externalLink" title="Sponsorship">
    Sponsorship</a>
          </li>
                             <li class="none">
                  <a href="http://www.apache.org/foundation/thanks.html" class="externalLink" title="Thanks">
    Thanks</a>
          </li>
                 </ul>
              </div>
            <div id="poweredBy">
                                                                                                                    <a href="http://www.apache.org/events/current-event.html" title="ApacheCon" class="builtBy">
        <img class="builtBy"  alt="ApacheCon" src="http://www.apache.org/events/current-event-125x125.png"    />
      </a>
                                                                                                    <a href="http://maven.apache.org/" title="Maven" class="builtBy">
        <img class="builtBy"  alt="Maven" src="http://maven.apache.org/images/logos/maven-feather.png"    />
      </a>
                      </div>
          </td>
          <td class="content">
                                                                          
 

<section>
<h2><a name="What.27s_new_in_Commons_Lang_2.4.3F"></a>What's new in Commons Lang 2.4?</h2>

<p>Commons Lang 2.4 is out, and the obvious question is: <i>&quot;So what? What's changed?&quot;</i>.</p>

<p>This article aims to briefly cover the changes and save you from having to dig through each JIRA
issue to see what went on in the year of development between Lang 2.3 and 2.4.</p>
<section>
<h2><a name="Deprecations"></a>Deprecations</h2>

<p>First, let us start with a couple of deprecations. As you can see in the release notes, we chose
to deprecate the <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/ObjectUtils.html#appendIdentityToString(java.lang.StringBuffer,%20java.lang.Object)">ObjectUtils.appendIdentityToString(StringBuffer, Object)</a> method as its
null handling did not match its design (see <a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-360">LANG-360</a>
for more details. Instead users should use ObjectUtils.identityToString(StringBuffer, Object).</p>


<p>We also deprecated <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/time/DateUtils.html#add(java.util.Date,%20int,%20int)">DateUtils.add(java.util.Date, int, int)</a>. It should have been private
from the beginning; please let us know if you actually use it.</p>
</section>
<section>
<h2><a name="The_build"></a>The build</h2>

<p>Before we move on, a quick note on the build: we built 2.4 using Maven 2 and Java 1.4. We also tested that the Ant build passed the tests
successfully under Java 1.3, and that the classes compiled under Java 1.2. As it's been so long, we stopped building a Java 1.1-compatible jar. <b>Most importantly</b>, it <i>should</i> be a drop in replacement for Lang 2.3, but we recommend testing first, of course. Also, for those of you who work within an OSGi framework, the jar should be ready for OSGi. Now... time to move on.
</p>
</section>
<section>
<h2><a name="New_classes"></a>New classes</h2>

<p>Three new classes were added, so let's cover those next.</p>

<p>Firstly, we added an <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/math/IEEE754rUtils.html">IEEE754rUtils</a>
class to the org.apache.commons.lang.math package.
This candidate for ugly name of the month was needed to add <a class="externalLink" href="http://en.wikipedia.org/wiki/IEEE_754r#min_and_max">IEEE-754r</a>
semantics for some of the NumberUtils methods. The relevant part of that
IEEE specification in this case is the NaN handling for min and max methods, and
you can read more about it in <a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-381">LANG-381</a>.
</p>

<p>Second and third on our newcomers list are the <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/text/ExtendedMessageFormat.html">ExtendedMessageFormat</a> class and its peer
<a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/text/FormatFactory.html">FormatFactory</a>
interface, both found in the org.apache.commons.lang.text package.</p>

<p>Together they allow you to take the java.text.MessageFormat class further and insert your own formatting elements.</p>

<p>
By way of an example, imagine that we have a need for custom formatting of a employee identification
number or EIN. Perhaps, simplistically, our EIN is composed of a two-character department code
followed by a four-digit number, and that it is customary within our organization to render the EIN
with a hyphen following the department identifier. Here we'll represent the EIN as a simple
String (of course in real life we would likely create a class composed of department and number).
We can create a custom Format class:
</p>
<div>
<pre>
public class EINFormat extends Format {
  private char[] idMask;

  public EINFormat() {
  }
  public EINFormat(char maskChar) {
    idMask = new char[4];
    Arrays.fill(idMask, maskChar);
  }
  public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos) {
    String ein = (String) obj; //assume or assert length &gt;= 2
    if (idMask == null) {
      return new StringBuffer(ein).insert(2, '-').toString();
    }
    return new StringBuffer(ein.substring(0, 2)).append('-').append(idMask).toString();
  }
  public Object parseObject(String source, ParsePosition pos) {
    int idx = pos.getIndex();
    int endIdx = idx + 7;
    if (source == null || source.length() &lt; endIdx) {
      pos.setErrorIndex(idx);
      return null;
    }
    if (source.charAt(idx + 2) != '-') {
      pos.setErrorIndex(idx);
      return null;
    }
    pos.setIndex(endIdx);
    return source.substring(idx, endIdx).deleteCharAt(2);
  }
}
</pre></div>
Our custom EIN format is made available for MessageFormat-style processing by a
FormatFactory implementation:

<div>
<pre>
public class EINFormatFactory implements FormatFactory {
  public static final String EIN_FORMAT = &quot;ein&quot;;
  public Format getFormat(String name, String arguments, Locale locale) {
    if (EIN_FORMAT.equals(name)) {
      if (arguments == null || &quot;&quot;.equals(arguments)) {
        return new EINFormat();
      }
      return new EINFormat(arguments.charAt(0));
    }
    return null;
  }
}
</pre></div>

Now you simply provide a java.util.Map&lt;String, FormatFactory&gt; registry (keyed
by format type) to ExtendedMessageFormat:

<div>
<pre>
new ExtendedMessageFormat(&quot;EIN: {0,ein}&quot;, Collections.singletonMap(EINFormatFactory.EIN_FORMAT, new EINFormatFactory()));
</pre></div>
As expected, this will render a String EIN &quot;AA9999&quot; as: &quot;EIN: AA-9999&quot;.
<br /> <br />
If we wanted to trigger the EIN masking code, we could trigger that in the format pattern:

<div>
<pre>
new ExtendedMessageFormat(&quot;EIN: {0,ein,#}&quot;, Collections.singletonMap(EINFormatFactory.EIN_FORMAT, new EINFormatFactory()));
</pre></div>
This should render &quot;AA9999&quot; as: &quot;EIN: AA-####&quot;.
<br /> <br />
You can also use ExtendedMessageFormat to override any or all of the built-in
formats supported by java.text.MessageFormat. Finally, note that because
ExtendedMessageFormat extends MessageFormat it should work in most
cases as a <i>true</i> drop-in replacement.

</section>
<section>
<h2><a name="New_methods"></a>New methods</h2>

<p>There were 58 new methods added to existing Commons Lang classes. Going through each one, one at a time would be dull,
and fortunately there are some nice groupings that we can discuss instead:</p>

<p>CharSet <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/CharSet.html#getInstance(java.lang.String[])">getInstance(String[])</a> adds an additional builder method by which you can build a CharSet from multiple sets of characters at the same time. If you weren't aware of the CharSet class, it holds a set of characters created by a simple pattern language allowing constructs such as &quot;a-z&quot; and &quot;^a&quot; (everything but 'a'). It's most used by the CharSetUtils class, and came out of CharSetUtils.translate, a simple variant of the UNIX tr command.</p>

<p>ClassUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/ClassUtils.html">canonical name</a> methods are akin to the non 'Canonical' methods, except they work with the more human readable int[] type names rather than the JVM versions of [I. This makes them useful for parsing input from developer's configuration files. </p>

<p>ClassUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/ClassUtils.html#toClass(java.lang.Object[])">toClass(String[])</a> is very easy to explain - it calls toClass on each Object in the array and returns an array of Class objects.</p>

<p>ClassUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/ClassUtils.html#wrappersToPrimitives(java.lang.Class[])">wrapper-&gt;primitive</a> conversions are the reflection of the pre-existing primitiveToWrapper methods. Again easy to explain, they turn an array of Integer into an array of int[].</p>

<p>ObjectUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/ObjectUtils.html#identityToString(java.lang.StringBuffer,%20java.lang.Object)">identityToString(StringBuffer, Object)</a> is the StringBuffer variant of the pre-existing identityToString method. In case you've not met that before, it produces the toString that would have been produced by an Object if it hadn't been overridden.</p>

<p>StringEscapeUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringEscapeUtils.html#escapeCsv(java.lang.String)">CSV methods</a> are a new addition to our range of simple parser/printers. These, quite as expected, parse and unparse CSV text as per <a class="externalLink" href="http://tools.ietf.org/html/rfc4180">RFC-4180</a>.</p>

<p>StringUtils has a host of new methods, as always, and we'll leave these for later.</p>

<p>WordUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/WordUtils.html#abbreviate(java.lang.String,%20int,%20int,%20java.lang.String)">abbreviate</a> finds the first space after the lower limit and abbreviates the text.</p>

<p>math.<a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/math/IntRange.html#toArray()">IntRange</a>/<a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/math/LongRange.html#toArray()">LongRange.toArray</a> turn the range into an array of primitive int/longs contained in the range.</p>

<p>text.StrMatch.<a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/text/StrMatcher.html#isMatch(char[],%20int)">isMatch(char[], int)</a> is a helper method for checking whether there was a match with the StrMatcher objects.</p>

<p>time.DateFormatUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/time/DateFormatUtils.html">format(Calendar, ...)</a> provide Calendar variants for the pre-existing format methods. If these are new to you, they are helper methods to formatting a date.</p>

<p>time.DateUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/time/DateUtils.html">getFragment*</a> methods are used to splice the time element out of Date. If you have 2008/12/13 14:57, then these could, for example, pull out the 13.</p>

<p>time.DateUtils <a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/time/DateUtils.html">setXxx methods</a> round off our walk through the methods - the setXxx variant of the existing addXxx helper methods.</p>
</section>

<section>
<h2><a name="StringUtils_methods"></a>StringUtils methods</h2>

<p>The StringUtils class is a little large, isn't it? Sorry, but it's gotten bigger.
</p>

<ul>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#containsOnly(java.lang.String,%20char[])">boolean containsAny(String, char[])</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#containsOnly(java.lang.String,%20java.lang.String)">boolean containsAny(String, String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#endsWith(java.lang.String,%20java.lang.String)">boolean endsWith(String, String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#endsWithIgnoreCase(java.lang.String,%20java.lang.String)">boolean endsWithIgnoreCase(String, String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#getCommonPrefix(java.lang.String[])">String getCommonPrefix(String[])</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#indexOfDifference(java.lang.String[])">int indexOfDifference(String[])</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#length(java.lang.String)">int length(String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#removeEndIgnoreCase(java.lang.String,%20java.lang.String)">String removeEndIgnoreCase(String, String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#removeStartIgnoreCase(java.lang.String,%20java.lang.String)">String removeStartIgnoreCase(String, String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#replaceEach(java.lang.String,%20java.lang.String[],%20java.lang.String[])">String replaceEach(String, String[], String[])</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#replaceEachRepeatedly(java.lang.String,%20java.lang.String[],%20java.lang.String[])">String replaceEachRepeatedly(String, String[], String[])</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#splitByCharacterType(java.lang.String)">String[] splitByCharacterType(String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#splitByCharacterTypeCamelCase(java.lang.String)">String[] splitByCharacterTypeCamelCase(String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#splitByWholeSeparatorPreserveAllTokens(java.lang.String,%20java.lang.String)">String[] splitByWholeSeparatorPreserveAllTokens(String, String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#splitByWholeSeparatorPreserveAllTokens(java.lang.String,%20java.lang.String,%20int)">String[] splitByWholeSeparatorPreserveAllTokens(String, String, int)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#startsWith(java.lang.String,%20java.lang.String)">boolean startsWith(String, String)</a></li>
  
<li><a class="externalLink" href="https://commons.apache.org/lang/api-release/org/apache/commons/lang/StringUtils.html#startsWithIgnoreCase(java.lang.String,%20java.lang.String)">boolean startsWithIgnoreCase(String, String)</a></li>
</ul>


<p>Hopefully they are in many cases self-describing. Rather than spend a lot of time describing them, we'll let you read the Javadoc of the ones that interest you.</p>

</section>

<section>
<h2><a name="What.27s_fixed_in_Lang_2.4.3F"></a>What's fixed in Lang 2.4?</h2>

<p>In addition to new things, there are the bugfixes. As you can tell from the release notes, there are a good few - 24 in fact according to JIRA. Here are some of the interesting ones: </p>

<ul>

<li><a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-393">LANG-393</a> - We fixed EqualsBuilder so that it understands that BigDecimals are equal even when they think they're not. It seems very likely that usually you will want &quot;29.0&quot; and &quot;29.00&quot; to be equal, even if BigDecimal disagrees. </li>

<li><a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-380">LANG-380</a> - Chances are you'll know if you met this one. Fraction.reduce has an infinite loop if the numerator is 0. </li>

<li><a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-369">LANG-369</a>, <a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-367">LANG-367</a>, <a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-334">LANG-334</a> - Threading bugs - we improved how things work in concurrency situations for ExceptionUtils, FastDateFormat and Enum. </li>

<li><a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-346">LANG-346</a> - DateUtils.round was getting things wrong for minutes and seconds. </li>

<li><a class="externalLink" href="https://issues.apache.org/jira/browse/LANG-328">LANG-328</a> - LocaleUtils.toLocale was broken if there was no country code defined. </li>
</ul>
</section>

<section>
<h2><a name="So_long.2C_farewell..."></a>So long, farewell...</h2>

<p>Hopefully that was all of interest. Don't forget to download <a class="externalLink" href="https://commons.apache.org/lang/download_lang.cgi">Lang 2.4</a>, or, for the Maven repository users, upgrade your &lt;version&gt; tag to 2.4. Please feel free to raise any questions you might have on the <a href="mail-lists.html">mailing lists</a>, and report bugs or enhancements in the <a href="issue-tracking.html">issue tracker</a>.</p>
</section>

</section>



                      </td>
        </tr>
      </table>
    </div>

    <div class="footer">
      <p>Copyright &copy;                    2001-2020
                      <a href="https://www.apache.org/">The Apache Software Foundation</a>.
            All Rights Reserved.</p>
                                        
<div class="center">Apache Commons, Apache Commons Lang, Apache, the Apache feather logo, and the Apache Commons project logos are trademarks of The Apache Software Foundation.
      All other marks mentioned may be trademarks or registered trademarks of their respective owners.</div>
                  </div>
  </body>

</html>